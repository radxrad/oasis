{"version":3,"sources":["components/MicropubCard.js","history.js","paths.js","components/ListItem.js","components/Question.js","components/AddQuestion.js","components/MicropubBody.js","serviceWorker.js","index.js","routes/Home.js","routes/SignIn.js","routes/SignUp.js","routes/User.js","routes/Read.js","routes/Publish.js","routes/Test.js"],"names":["MicropubCard","props","Card","className","Row","Img","src","img","alt","Col","Title","title","Text","abstract","authors","map","author","Link","href","link","key","id","name","createBrowserHistory","paths","home","signIn","signUp","onboard","user","read","publish","test","ListItem","iconMapping","micropub","question","answer","type","Question","num","ansNum","Container","Button","AddQuestion","Form","Group","Control","placeholder","as","DropdownButton","Dropdown","Item","eventKey","onClick","close","MicropubBody","body","Boolean","window","location","hostname","match","ReactDOM","render","history","Navbar","sticky","Brand","Nav","exact","path","component","example","text","push","Body","intro","authorIds","uid","Check","label","exampleQuestion","useState","show","setShow","handleClose","Modal","onHide","ListGroup","asker","time","moment","unix","publishTime","format","data","file","reviewNum","value","setValue","onChange","resources","onDrop","acceptedFiles","console","log","maxSize","multiple","accept","getRootProps","getInputProps","reference","preview","Tab","defaultActiveKey","action","Content","Pane","Table","style","flex","background","variant","Test","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9dbd9eac.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nexport default function MicropubCard(props) {\n  return (\n    <Card className=\"micropub\">\n      <Row>\n        <Card.Img src={props.img} alt=\"img\" />\n        <Col>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.abstract}</Card.Text>\n        </Col>\n      </Row>\n      <div className=\"authors\">\n        {props.authors\n          ? props.authors.map((author) => (\n              <Card.Link href={author.link} key={author.id}>\n                <img src={author.img} className=\"avatar--sm\" alt=\"avatar\" />\n                {author.name}\n              </Card.Link>\n            ))\n          : \"\"}\n      </div>\n    </Card>\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","const paths = {\n  home: \"/\",\n  signIn: \"/signin\",\n  signUp: \"/signup\",\n  onboard: \"/onboard\",\n  user: \"/user\",\n  read: \"/read\",\n  publish: \"/publish\",\n  test: \"/test\",\n};\n\nexport default paths;\n","import React from \"react\";\nimport { BsBook, BsQuestionCircle, BsCardText } from \"react-icons/bs\";\n\nexport default function ListItem(props) {\n  const iconMapping = {\n    micropub: <BsBook />,\n    question: <BsQuestionCircle />,\n    answer: <BsCardText />,\n  };\n  const type = props.type;\n  const title = props.title;\n\n  return (\n    <a className={`listitem__${type} listitem`} href=\"/read\">\n      {iconMapping[type]} {title}\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\n\nexport default function Question(props) {\n  const num = props.ansNum;\n // const asker = props.askerId;\n  return (\n    <Container id={props.id} className=\"question\">\n      <div className=\"body\">\n        <p>{props.title}</p>\n        <div className=\"control\">\n          {num > 1 ? `${num} answers` : `${num} answer`}\n          <Button className=\"btn--white btn--lg\">Answer Question</Button>\n        </div>\n      </div>\n      <div className=\"arrow-down\"></div>\n      {/*\n      <a href={asker.link} key={asker.id} className=\"asker\">\n        <img src={asker.img} className=\"avatar--sm\" alt=\"avatar\" />\n        {asker.name}\n      </a> */}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { DropdownButton, Dropdown, Form, Button } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BiGlobe } from \"react-icons/bi\";\nexport default function AddQuestion(props) {\n  return (\n    <Form className=\"addquestion\">\n      <Form.Group className=\"inputs\">\n        <div className=\"heading\">Add a Question </div>\n        <Form.Control type=\"text\" placeholder=\"Question\" className=\"subject\" />\n        <Form.Control\n          as=\"textarea\"\n          placeholder=\"Descriptions\"\n          className=\"description\"\n        />\n        <div className=\"search\">\n          Keywords: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Make this question:\n          <DropdownButton\n            title={\n              <div>\n                <BiGlobe />\n                Public\n              </div>\n            }\n          >\n            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n          </DropdownButton>\n        </div>\n        <div className=\"search\">\n          Tag Researchers: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Tag a Micropub: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n      </Form.Group>\n      <Form.Group className=\"controls\">\n        <Button className=\"btn--lg btn--cancel\" onClick={props.close}>\n          Cancel\n        </Button>\n        <Button className=\"btn--lg\">\n          <MdQuestionAnswer />\n          Ask a Question\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n}\n","import React from \"react\";\n\nexport default function MicropubBody(props) {\n  return (\n    <div className=\"body\">\n      <div className=\"heading\">{props.title}</div>\n      <img src={props.img} alt=\"figure\"></img>\n      <div className=\"text\">{props.body}</div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./css/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport paths from \"paths\";\nimport SignIn from \"routes/SignIn\";\nimport SignUp from \"routes/SignUp\";\nimport User from \"routes/User\";\nimport Read from \"routes/Read\";\nimport history from \"./history\";\nimport Publish from \"routes/Publish\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Test from \"routes/Test\";\n\nReactDOM.render(\n  <Router history={history}>\n    <Navbar className=\"custom-nav\" sticky=\"top\">\n      <Navbar.Brand className=\"navbar__brand\" href=\"./\">\n        OASIS\n      </Navbar.Brand>\n      <Nav>\n        <Nav.Link className=\"navbar__signin\" href=\"./signin\">\n          Sign In\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n\n    <Switch>\n      <Route exact path={paths.home} component={Home} />\n      <Route path={paths.signIn} component={SignIn} />\n      <Route path={paths.signUp} component={SignUp} />\n      <Route path={paths.user} component={User} />\n      <Route path={paths.read} component={Read} />\n      <Route path={paths.publish} component={Publish} />\n      <Route path={paths.test} component={Test} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { Button, Form, Container, Row, Card } from \"react-bootstrap\";\nimport React from \"react\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\nimport history from \"history.js\";\n\nexport default function Home() {\n  const example = text.micropub;\n\n  return (\n    <div className=\"home light-bg\">\n      <Container>\n        <Row className=\"header\">\n          <div className=\"headlines\">\n            <div className=\"headline--black mb-4\">\n              <b>Get</b> and <b>Share</b> rapid science micropubs for COVID-19\n            </div>\n            <div className=\"headline--blue mb-2\">\n              <b>Get</b> answers on the latest research from other experts in\n              the field.\n            </div>\n            <div className=\"headline--blue\">\n              <b>Share</b> your research with the world through\n              micro-publications.\n            </div>\n          </div>\n          <Form className=\"signup__container\">\n            <div className=\"signup__header\">Join OASIS</div>\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"First Name\"\n            />\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"Last name\"\n            />\n            <Form.Control\n              type=\"email\"\n              className=\"signup__textbox\"\n              placeholder=\"Email\"\n            />\n            <Form.Control\n              type=\"password\"\n              className=\"signup__textbox\"\n              placeholder=\"Password\"\n            />\n            <Button\n              className=\"btn--md\"\n              type=\"submit\"\n              onClick={() => history.push(\"/user\")}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Row>\n\n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">What is a MICROPUB(LICATION)?</div>\n          <Card>\n            <Card.Body>\n              <Card.Text>{text.intro}</Card.Text>\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row className=\"preview\">\n          <p className=\"preview__subtitle\">Featured QUESTIONS AND MICROPUBS</p>\n          <div className=\"mp-list\">\n            <MicropubCard\n              img={example.img}\n              authorIds={example.authorIds}\n              title={example.title}\n              abstract={example.abstract}\n              uid={example.uid}\n            ></MicropubCard>\n            <MicropubCard\n              img={example.img}\n              authorIds={example.authorIds}\n              title={example.title}\n              abstract={example.abstract}\n              uid={example.uid}\n            ></MicropubCard>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport history from \"../history\";\n\nexport default function SignIn() {\n  function handleSignIn() {\n    history.push(\"/user\");\n  }\n  return (\n    <div className=\"signin light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Sign In</div>\n        <Form.Group>\n          <Form.Control\n            type=\"email\"\n            className=\"signup__textbox\"\n            placeholder=\"Email\"\n          />\n          <Form.Control\n            type=\"password\"\n            className=\"signup__textbox\"\n            placeholder=\"Password\"\n          />\n\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\n        </Form.Group>\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={() => handleSignIn()}\n        >\n          Sign In\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport history from \"../history\";\n\nexport default function SignUp() {\n  function handleSignUp() {\n    history.push(\"/user\");\n  }\n  return (\n    <div className=\"signup light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Join OASIS</div>\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"First Name\"\n        />\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"Last name\"\n        />\n        <Form.Control\n          type=\"email\"\n          className=\"signup__textbox\"\n          placeholder=\"Email\"\n        />\n        <Form.Control\n          type=\"password\"\n          className=\"signup__textbox\"\n          placeholder=\"Password\"\n        />\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={() => handleSignUp()}\n        >\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Col, ListGroup, Row, Container, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BsFillPlusSquareFill } from \"react-icons/bs\";\nimport ListItem from \"components/ListItem\";\nimport Question from \"components/Question\";\nimport history from \"history.js\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function User() {\n  const user = { name: \"User\", id: -1, img: \"http://placekitten.com/60/60\" };\n  const exampleQuestion = text.question;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <Container className=\"userpage\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <Row className=\"max-window\">\n        <Col>\n          <div className=\"welcome heading\">\n            <img src={user.img} alt=\"user-avatar\" className=\"avatar--lg\"></img>\n            Welcome, {user.name}\n          </div>\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Micropubs{\" \"}\n              <Button\n                className=\"btn--blue btn--lg\"\n                onClick={() => history.push(\"/publish\")}\n              >\n                <BsFillPlusSquareFill />\n                Create a Micropub\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--small\">\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n            </ListGroup>\n          </div>\n\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Question & Answers\n              <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n                <MdQuestionAnswer close={handleClose} />\n                Ask a Question\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--small\">\n              <ListItem\n                type=\"question\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"answer\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"question\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n            </ListGroup>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Feeds\n              <Button className=\"btn--blue btn--lg\">\n                Browse Open Questions\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--large\">\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                uid={exampleQuestion.uid}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                uid={exampleQuestion.uid}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                uid={exampleQuestion.uid}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                uid={exampleQuestion.uid}\n                ansNum={0}\n              />\n            </ListGroup>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Button, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer, MdRateReview } from \"react-icons/md\";\nimport { BsCloudDownload, BsStar } from \"react-icons/bs\";\nimport MicropubBody from \"components/MicropubBody\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\nimport moment from \"moment\";\n\nexport default function Read() {\n  const example = text.micropub;\n  const time = moment.unix(example.publishTime).format(\"MM/DD/YYYY\");\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <Container className=\"read\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <MicropubBody\n        title={example.title}\n        img={example.img}\n        body={example.body}\n      />\n      <div className=\"sidebar\">\n        <div className=\"info\">\n          <div className=\"publish-time\">\n            <div className=\"label\">Published:</div>\n            <div className=\"time\">{time}</div>\n          </div>\n          <div className=\"authors\">\n            <div className=\"label\">Author(s):</div>\n            <div className=\"list\">\n              {example.authorIds\n                ? example.authorIds.map((author) => (\n                    <a href={author.link} key={author.id}>\n                      <img\n                        src={author.img}\n                        className=\"avatar--sm\"\n                        alt=\"avatar\"\n                      />\n                      {author.name}\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"data\">\n            <div className=\"label\">Data and Resources:</div>\n            <div className=\"list\">\n              {example.data\n                ? example.data.map((file) => (\n                    <a href={file.link} key={file.id}>\n                      {file.name}\n                      <BsCloudDownload className=\"sidebar__icon\" />\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"reviews\">\n            <div className=\"label\">Reviews:</div>\n            <div className=\"stars\">\n              <BsStar /> <BsStar /> <BsStar /> <BsStar /> <BsStar />(\n              {example.reviewNum})\n            </div>\n          </div>\n          <Button className=\"btn--white\">View Related Questions</Button>\n        </div>\n        <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n          <MdQuestionAnswer />\n          Ask a Question\n        </Button>\n        <Button className=\"btn--blue btn--lg\">\n          <MdRateReview />\n          Write a Review\n        </Button>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Dropdown,\n  DropdownButton,\n  ListGroup,\n  Row,\n  Tab,\n  Table,\n} from \"react-bootstrap\";\nimport { BiGlobe } from \"react-icons/bi\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\nimport MicropubBody from \"components/MicropubBody\";\nimport history from \"history.js\";\nimport Dropzone from \"react-dropzone\";\nimport { AiFillPicture } from \"react-icons/ai\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nexport default function Publish() {\n  const [value, setValue] = useState(\"\");\n\n  const example = text.micropub;\n\n  const abstract = (\n    <div className=\"abstract\">\n      <input\n        type=\"textarea\"\n        placeholder=\"What question would you like to answer?...\"\n      />\n      <ReactQuill value={value} onChange={setValue} />\n    </div>\n  );\n\n  const resources = (\n    <div>\n      <Dropzone\n        onDrop={(acceptedFiles) => console.log(acceptedFiles)}\n        maxSize={10000000}\n        multiple\n        accept=\".jpg, .png, .pdf, .csv, .tsv, .xlsx\"\n      >\n        {({ getRootProps, getInputProps }) => (\n          <section className=\"dropzone\">\n            <input {...getInputProps()} />\n            <div {...getRootProps()}>\n              <AiFillPicture />\n              <p className=\"label\">Drag Resources Here</p>\n              <p className=\"upload\">Or select from your computer...</p>\n              <div className=\"req\">\n                <p>.jpg .png .pdf .csv .tsv .xlsx</p>\n                <p>max file size: 10MB</p>\n              </div>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n  const body = <ReactQuill value={value} onChange={setValue} />;\n\n  const reference = (\n    <ReactQuill\n      placeholder=\"(Recommend Using Harvard Referencing Style)\"\n      onChange={setValue}\n    />\n  );\n\n  const preview = (\n    <div className=\"preview\">\n      <div className=\"label\">Card Preview</div>\n      <MicropubCard\n        img={example.img}\n        authorIds={example.authorIds}\n        title={example.title}\n        abstract={example.abstract}\n      ></MicropubCard>\n      <div className=\"label\">Micropub Preview</div>\n      <MicropubBody\n        title={example.title}\n        img={example.img}\n        body={example.body}\n      />\n    </div>\n  );\n\n  return (\n    <div id=\"publish\">\n      <Tab.Container defaultActiveKey=\"#abstract\">\n        <Row className=\"max-window\">\n          <Col className=\"tab__nav\">\n            <h2 className=\"heading\">Create a Micropub</h2>\n            <ListGroup defaultActiveKey=\"#abstract\">\n              <ListGroup.Item action href=\"#abstract\">\n                Abstract\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#resources\">\n                Data and Resources\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#body\">\n                Body\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#reference\">\n                Reference\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#preview\">\n                Preview\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col className=\"tab__content\">\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#abstract\">{abstract}</Tab.Pane>\n              <Tab.Pane eventKey=\"#resources\">{resources}</Tab.Pane>\n              <Tab.Pane eventKey=\"#body\">{body}</Tab.Pane>\n              <Tab.Pane eventKey=\"#reference\">{reference}</Tab.Pane>\n              <Tab.Pane eventKey=\"#preview\">{preview}</Tab.Pane>\n            </Tab.Content>\n          </Col>\n          <Col className=\"sidebar\">\n            <div className=\"list\">\n              <div className=\"label\">Authors</div>\n              <div className=\"search\">\n                Add Author: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Visibility</div>\n              <DropdownButton\n                title={\n                  <div>\n                    <BiGlobe />\n                    Public\n                  </div>\n                }\n                id=\"bg-vertical-dropdown-2\"\n              >\n                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n              </DropdownButton>\n            </div>\n            <div>\n              <div className=\"label\">Keywords</div>\n              <div className=\"search\">\n                Add Keyword: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Uploaded Resources</div>\n              <Table></Table>\n            </div>\n            <div style={{ flex: 1, background: \"none\" }}></div>\n            <div className=\"controls\">\n              <Button className=\"btn--sm btn--lightblue\" variant=\"primary\">\n                Save\n              </Button>\n              <Button className=\"btn--sm btn--blue\" variant=\"primary\">\n                Publish\n              </Button>\n              <Button\n                className=\"btn--sm btn--discard\"\n                variant=\"danger\"\n                onClick={() => history.push(\"/user\")}\n              >\n                Discard\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Test() {\n  return (\n    <div>\n      <Test></Test>\n    </div>\n  );\n}\n"],"sourceRoot":""}