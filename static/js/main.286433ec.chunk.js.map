{"version":3,"sources":["routes/MyStory/styles.module.css","routes/StoryHistory/styles.module.css","components/MicropubCard/index.js","history.js","actions/types.js","routes/paths.js","utils.js","actions/story.js","routes/StoryHistory/index.js","components/ListItem/index.js","components/Question/index.js","components/AddQuestion/index.js","components/MicropubBody/index.js","reducers/auth.js","reducers/story.js","reducers/symptoms.js","reducers/index.js","store/configureStore.js","serviceWorker.js","index.js","routes/Home/index.js","routes/SignIn/index.js","routes/SignUp/index.js","routes/User/index.js","routes/MyStory/index.js","routes/Reading/index.js","routes/Publish/index.js","routes/Test/index.js"],"names":["module","exports","MicropubCard","props","Card","className","Row","Img","src","img","alt","Col","Title","title","Text","text","authors","map","author","Link","href","link","key","id","name","createBrowserHistory","LOADING","paths","home","signIn","signUp","onboard","myStory","storyHistory","public","user","reading","publish","test","api","path","a","payload","explicitBody","fullPayload","method","credentials","headers","body","JSON","stringify","Array","isArray","obj","parseObjectKeys","camelToSnakeCase","fetch","process","REACT_APP_API","window","location","host","response","status","history","push","json","element","snakeToCamelCase","error","code","type","detail","object","Object","keys","reduce","acc","str","replace","group","toUpperCase","toLowerCase","getCurrentStory","dispatch","travels","closeContacts","story","useStyles","makeStyles","theme","paper","padding","overflowWrap","secondaryTail","backgroundColor","palette","secondary","main","typography","maxWidth","timeline","alignItems","index","iconMapping","micropub","question","answer","num","ansNum","asker","Container","Button","AddQuestion","Form","Group","Control","placeholder","as","DropdownButton","Dropdown","Item","eventKey","onClick","close","initialState","token","auth","state","action","tempMyStory","tempStory","sick","tested","latestMyStory","all","selected","symptoms","combineReducers","store","middleware","enhancers","thunk","logger","createLogger","level","collapsed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","enhancer","createStore","rootReducer","configureStore","Boolean","hostname","match","ReactGA","initialize","listen","set","page","pathname","pageview","ReactDOM","render","utils","MomentUtils","basename","Navbar","sticky","Brand","Nav","exact","component","example","micropubCard","Body","intro","Check","label","exampleQuestion","useState","show","setShow","handleClose","Modal","onHide","ListGroup","setMyStory","useSelector","useDispatch","style","marginBottom","color","TextField","multiline","rowsMax","value","onChange","event","target","classNames","styles","textarea","variant","Fab","background","width","margin","aria-label","size","length","document","getElementById","innerHTML","storyId","mystory","newMyStory","story_id","dashboard","stories","setStories","classes","useEffect","then","data","marginTop","root","maxHeight","Timeline","sort","b","my_story","i","TimelineItem","TimelineOppositeContent","Typography","createdAt","TimelineSeparator","TimelineDot","TimelineConnector","content","TimelineContent","Paper","elevation","textAlign","publishTime","file","reviewNum","exampleCard","exampleBody","abstract","resources","preview","Tab","defaultActiveKey","Content","Pane","Table","flex","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.286433ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"styles_textarea__2EP0z\",\"Mui-focused\":\"styles_Mui-focused__2jhBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1mz1T\"};","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nexport default function MicropubCard(props) {\n  return (\n    <Card className=\"micropub\">\n      <Row>\n        <Card.Img src={props.img} alt=\"img\" />\n        <Col>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.text}</Card.Text>\n        </Col>\n      </Row>\n      <div className=\"authors\">\n        {props.authors\n          ? props.authors.map((author) => (\n              <Card.Link href={author.link} key={author.id}>\n                <img src={author.img} className=\"avatar--sm\" alt=\"avatar\" />\n                {author.name}\n              </Card.Link>\n            ))\n          : \"\"}\n      </div>\n    </Card>\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","export const GET_OVERALL = \"GET_OVERALL\";\nexport const SIGN_UP = \"SIGN_UP\";\nexport const SIGN_UP_START = \"SIGN_UP_START\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_IN_START = \"SIGN_IN_START\";\nexport const SET_SICK_STATUS = \"SET_SICK_STATUS\";\nexport const SET_TESTED_STATUS = \"SET_TESTED_STATUS\";\nexport const SUCCESS = \"SUCCESS\";\nexport const ERROR = \"ERROR\";\nexport const LOADING = \"LOADING\";\nexport const SET_STORY = \"SET_STORY\";\nexport const SAVE_STORY_START = \"SAVE_STORY_START\";\nexport const SAVED_STORY = \"SAVED_STORY\";\nexport const FETCH_SYMPTOMS_START = \"FETCH_SYMPTOMS_START\";\nexport const FETCH_SYMPTOMS = \"FETCH_SYMPTOMS\";\nexport const SUBMIT_SYMPTOMS_START = \"SUBMIT_SYMPTOMS_START\";\nexport const SUBMIT_SYMPTOMS = \"SUBMIT_SYMPTOMS\";\nexport const FETCH_STORY_START = \"FETCH_STORY_START\";\nexport const FETCH_STORY = \"FETCH_STORY\";\nexport const INVALID_STORY = \"INVALID_STORY\";\nexport const SUBMIT_TRAVELS_START = \"SUBMIT_TRAVELS_START\";\nexport const SUBMIT_TRAVELS = \"SUBMIT_TRAVELS\";\nexport const SUBMIT_CLOSE_CONTACTS_START = \"SUBMIT_CLOSE_CONTACTS_START\";\nexport const SUBMIT_CLOSE_CONTACTS = \"SUBMIT_CLOSE_CONTACTS\";\nexport const SET_MY_STORY = \"SET_MY_STORY\";\nexport const SUBMIT_MY_STORY = \"SUBMIT_MY_STORY\";\n","import { sicknessStatus } from \"routes/types\";\n\nconst paths = {\n  home: \"/\",\n  signIn: \"/signin\",\n  signUp: \"/signup\",\n  onboard: \"/onboard\",\n  myStory: \"/mystory\",\n  storyHistory: \"/storyhistory\",\n  public: \"/public\",\n  user: \"/user\",\n  reading: \"/reading\",\n  publish: \"/publish\",\n  test: \"/test\",\n};\n\nexport const getConfirmFlow = (state, sickness) => {\n  if (!state || state.onboard === false) return paths.criticalQuestions;\n  if (sickness === sicknessStatus.SICK) return paths.symptoms;\n  return paths.dashboard;\n};\n\nexport default paths;\n","import { ERROR } from \"actions/types\";\nimport paths from \"routes/paths\";\nimport history from \"./history\";\n\nconst api = async (path, payload = {}, explicitBody = false) => {\n  const fullPayload = {\n    method: \"GET\",\n    credentials: \"include\",\n    ...payload,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...payload.headers,\n    },\n  };\n  if (payload.body) {\n    fullPayload.body = explicitBody\n      ? payload.body\n      : JSON.stringify(\n          Array.isArray(payload.body)\n            ? payload.body.map((obj) => parseObjectKeys(obj, camelToSnakeCase))\n            : parseObjectKeys(payload.body || {}, camelToSnakeCase)\n        );\n  }\n\n  let response = await fetch(\n    `${\n      process.env.REACT_APP_API || `https://${window.location.host}`\n    }/api/${path}`,\n    fullPayload\n  );\n  if (response.status === 401) history.push(paths.signIn);\n  // if everything was correct, process data\n  if (response.status >= 200 && response.status < 300) {\n    response = await response.json();\n    if (Array.isArray(response))\n      return response.map((element) =>\n        parseObjectKeys(element, snakeToCamelCase)\n      );\n    return parseObjectKeys(response, snakeToCamelCase);\n  }\n\n  // if we had a known error, return the proper status\n  const body = await response.json();\n  return {\n    error: {\n      code: response.status,\n      type: ERROR,\n      detail: body.detail || \"Unknown error! Please try again\",\n    },\n  };\n};\n\nexport const parseObjectKeys = (object, method) =>\n  Object.keys(object).reduce((acc, key) => {\n    if (Array.isArray(object[key])) {\n      acc[method(key)] = object[key].map((element) =>\n        typeof element === \"object\" && element !== null\n          ? parseObjectKeys(element, method)\n          : element\n      );\n    } else {\n      acc[method(key)] = object[key];\n    }\n    return acc;\n  }, {});\n\nexport const snakeToCamelCase = (str) =>\n  str.replace(/([-_][a-z])/g, (group) =>\n    group.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\")\n  );\n\nconst camelToSnakeCase = (str) => str.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n\nexport const getGeocoding = (city, state, country) => {\n  const MAPBOX_APIKEY =\n    \"pk.eyJ1IjoieXVzMjUyIiwiYSI6ImNrYTZhM2VlcjA2M2UzMm1uOWh5YXhvdGoifQ.ZIzOiYbBfwJsV168m42iFg\";\n\n  const query = city + \" \" + state + \" \" + country;\n  const url =\n    \"https://api.mapbox.com/geocoding/v5/mapbox.places/\" +\n    query +\n    \".json?access_token=\" +\n    MAPBOX_APIKEY;\n  return fetch(url)\n    .then((response) => response.json())\n    .then((jsondata) => {\n      if (\n        jsondata &&\n        jsondata.features &&\n        jsondata.features.length &&\n        jsondata.features[0].geometry &&\n        jsondata.features[0].geometry.coordinates &&\n        jsondata.features[0].geometry.coordinates.length >= 2\n      ) {\n        return jsondata.features[0].geometry.coordinates;\n      }\n    });\n};\n\nexport default api;\n","import api from \"utils\";\nimport history from \"../history\";\nimport {\n  SET_SICK_STATUS,\n  SET_TESTED_STATUS,\n  SET_STORY,\n  SAVED_STORY,\n  SAVE_STORY_START,\n  SUCCESS,\n  FETCH_STORY_START,\n  FETCH_STORY,\n  INVALID_STORY,\n  ERROR,\n  SUBMIT_TRAVELS_START,\n  SUBMIT_TRAVELS,\n  SUBMIT_CLOSE_CONTACTS_START,\n  SUBMIT_CLOSE_CONTACTS,\n  SET_MY_STORY,\n  SUBMIT_MY_STORY,\n} from \"./types\";\n\nexport const setStory = (story) => async (dispatch) => {\n  dispatch({\n    type: SET_STORY,\n    payload: story,\n  });\n};\n\nexport const submitStory = (dto, update = false) => async (dispatch) => {\n  if (!update) {\n    return dispatch({\n      type: INVALID_STORY,\n      payload: {\n        status: {\n          type: ERROR,\n        },\n      },\n    });\n  }\n\n  dispatch({ type: SAVE_STORY_START });\n  const { story, nextPage, travels, closeContacts } = dto;\n  const {\n    error,\n    travels: _travels,\n    closeContacts: _closeContacts,\n    ...updatedStory\n  } = await api(`stories/`, {\n    method: \"POST\",\n    body: story,\n  });\n\n  dispatch({\n    type: SAVED_STORY,\n    payload: {\n      status: error || { type: SUCCESS },\n      story: (!error && updatedStory) || null,\n      tempStory: null,\n    },\n  });\n\n  const storyId = updatedStory.id;\n  const sendTravels = () =>\n    travels.length && dispatch(submitTravels(travels, storyId));\n  const sendCloseContacts = () =>\n    closeContacts.length &&\n    dispatch(submitCloseContacts(closeContacts, storyId));\n  const anyError = await [sendTravels, sendCloseContacts].reduce(\n    async (error, func) => !(await error) && func(),\n    error\n  );\n\n  if (!anyError) {\n    history.push(nextPage);\n  }\n};\n\nexport const setMyStory = (myStory) => (dispatch) => {\n  dispatch({\n    type: SET_MY_STORY,\n    payload: myStory,\n  });\n};\n\nexport const submitMyStory = (id, mystory) => async (dispatch) => {\n  const payload = { latestMyStory: mystory };\n\n  dispatch({\n    type: SUBMIT_MY_STORY,\n    payload: payload,\n  });\n\n  const newMyStory = { text: mystory, story_id: id };\n  await api(`stories/${id}/my_stories`, {\n    method: \"POST\",\n    body: newMyStory,\n  });\n};\n\nexport const setSickStatus = (option) => (dispatch) => {\n  dispatch({\n    type: SET_SICK_STATUS,\n    payload: option,\n  });\n};\n\nexport const setTestedStatus = (option) => (dispatch) => {\n  dispatch({\n    type: SET_TESTED_STATUS,\n    payload: option,\n  });\n};\n\nexport const fetchStory = () => async (dispatch) => {\n  await getCurrentStory(dispatch);\n};\n\nexport const getCurrentStory = async (dispatch) => {\n  dispatch({ type: FETCH_STORY_START });\n  const { error, travels, closeContacts, ...story } = await api(\"stories/\");\n  dispatch({\n    type: FETCH_STORY,\n    payload: {\n      status: error || { type: SUCCESS },\n      story: (!error && story) || null,\n      travels: (!error && travels) || [],\n      closeContacts: (!error && closeContacts) || [],\n    },\n  });\n  return story;\n};\n\nconst submitTravels = (travels, storyId) =>\n  submitStoryComponents(storyId)(\n    \"travels\",\n    travels,\n    { type: SUBMIT_TRAVELS_START },\n    (errors, response) => ({\n      type: SUBMIT_TRAVELS,\n      payload: {\n        status: errors || { type: SUCCESS },\n        travels: (!errors && response) || [],\n      },\n    })\n  );\n\nconst submitCloseContacts = (closeContacts, storyId) =>\n  submitStoryComponents(storyId)(\n    \"contacts\",\n    closeContacts,\n    { type: SUBMIT_CLOSE_CONTACTS_START },\n    (errors, response) => ({\n      type: SUBMIT_CLOSE_CONTACTS,\n      payload: {\n        status: errors || { type: SUCCESS },\n        closeContacts: (!errors && response) || [],\n      },\n    })\n  );\n\nconst submitStoryComponents = (storyId) => (\n  path,\n  components,\n  before,\n  after\n) => async (dispatch) => {\n  dispatch(before);\n\n  let parsedComponents = components.map((component) => ({\n    ...component,\n    storyId,\n  }));\n  const newComponents = parsedComponents.filter(\n    (component) => !(\"id\" in component)\n  );\n  const updatedComponents = parsedComponents.filter(\n    (component) => \"id\" in component\n  );\n  const postResponse =\n    newComponents.length &&\n    (await api(`stories/${storyId}/${path}`, {\n      method: \"POST\",\n      body: newComponents,\n    }));\n\n  const putResponse =\n    updatedComponents.length &&\n    (await api(`stories/${storyId}/${path}`, {\n      method: \"PUT\",\n      body: updatedComponents,\n    }));\n\n  const errors = postResponse.error || putResponse.error;\n  const response = (!postResponse.error && postResponse\n    ? postResponse\n    : []\n  ).concat(!putResponse.error && putResponse ? putResponse : []);\n\n  dispatch(after(errors, response));\n  return errors;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab } from \"@material-ui/core\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport api from \"utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles.module.css\";\nimport classNames from \"classnames\";\nimport { fetchStory } from \"actions/story\";\nimport paths from \"routes/paths\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n    overflowWrap: \"anywhere\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  typography: {\n    maxWidth: \"12vw\",\n    overflowWrap: \"break-word\",\n  },\n  timeline: {\n    alignItems: \"baseline\",\n  },\n}));\n\nexport default function StoryHistory(props) {\n  const { story } = useSelector((state) => state.story);\n  const [stories, setStories] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!story) {\n      dispatch(fetchStory());\n    } else {\n      api(`stories/${story.id}/my_stories`, {\n        method: \"GET\",\n      }).then((data) => {\n        setStories(data);\n      });\n    }\n  }, [dispatch, story]);\n\n  const handleClick = () => {\n    props.history.push(paths.myStory);\n  };\n\n  return (\n    <>\n      <h2 className=\"title\">MY COVID-19 STORY HISTORY</h2>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n        style={{ marginTop: \"20px\" }}\n      >\n        Add New Story\n      </Button>\n      <div\n        className={classNames(\"root\", styles.root)}\n        style={{ marginTop: \"20px\", maxHeight: \"50vh\", maxWidth: \"600px\" }}\n      >\n        <Timeline className={classes.timeline}>\n          {stories\n            .sort((a, b) => b.id - a.id)\n            .map((my_story, i) => (\n              <TimelineItem key={i}>\n                <TimelineOppositeContent>\n                  <Typography component=\"h6\" className={classes.typography}>\n                    {my_story.createdAt}\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot></TimelineDot>\n                  <TimelineConnector />\n                </TimelineSeparator>\n                <div className={classes.content}>\n                  <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                      <Typography\n                        style={{\n                          textAlign: \"left\",\n                        }}\n                      >\n                        {my_story.text}\n                      </Typography>\n                    </Paper>\n                  </TimelineContent>\n                </div>\n              </TimelineItem>\n            ))}\n        </Timeline>\n        <Fab\n          style={{ background: \"#9206FF\" }}\n          aria-label=\"add\"\n          onClick={() => props.history.push(paths.dashboard)}\n          size=\"medium\"\n          className=\"fab back-btn\"\n        >\n          <ArrowLeftIcon />\n        </Fab>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { BsBook, BsQuestionCircle, BsCardText } from \"react-icons/bs\";\n\nexport default function index(props) {\n  const iconMapping = {\n    micropub: <BsBook />,\n    question: <BsQuestionCircle />,\n    answer: <BsCardText />,\n  };\n  const type = props.type;\n  const title = props.title;\n\n  return (\n    <a className={`listitem__${type} listitem`} href=\"/reading\">\n      {iconMapping[type]} {title}\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\n\nexport default function MicropubCard(props) {\n  const num = props.ansNum;\n  const asker = props.asker;\n  return (\n    <Container id={props.id} className=\"question\">\n      <div className=\"body\">\n        <p>{props.title}</p>\n        <div className=\"control\">\n          {num > 1 ? `${num} answers` : `${num} answer`}\n          <Button className=\"btn--white btn--lg\">Answer Question</Button>\n        </div>\n      </div>\n      <div className=\"arrow-down\"></div>\n\n      <a href={asker.link} key={asker.id} className=\"asker\">\n        <img src={asker.img} className=\"avatar--sm\" alt=\"avatar\" />\n        {asker.name}\n      </a>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { DropdownButton, Dropdown, Form, Button } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BiGlobe } from \"react-icons/bi\";\nexport default function AddQuestion(props) {\n  return (\n    <Form className=\"addquestion\">\n      <Form.Group className=\"inputs\">\n        <div className=\"heading\">Add a Question </div>\n        <Form.Control type=\"text\" placeholder=\"Question\" className=\"subject\" />\n        <Form.Control\n          as=\"textarea\"\n          placeholder=\"Descriptions\"\n          className=\"description\"\n        />\n        <div className=\"search\">\n          Keywords: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Make this question:\n          <DropdownButton\n            title={\n              <div>\n                <BiGlobe />\n                Public\n              </div>\n            }\n          >\n            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n          </DropdownButton>\n        </div>\n        <div className=\"search\">\n          Tag Researchers: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Tag a Micropub: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n      </Form.Group>\n      <Form.Group className=\"controls\">\n        <Button className=\"btn--lg btn--cancel\" onClick={props.close}>\n          Cancel\n        </Button>\n        <Button className=\"btn--lg\">\n          <MdQuestionAnswer />\n          Ask a Question\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n}\n","import React from \"react\";\n\nexport default function index(props) {\n  return (\n    <div className=\"body\">\n      <div className=\"heading\">{props.title}</div>\n      <img src={props.img} alt=\"figure\"></img>\n      <div className=\"text\">{props.text}</div>\n    </div>\n  );\n}\n","import {\n  SIGN_UP,\n  SIGN_UP_START,\n  SIGN_IN,\n  SIGN_IN_START,\n  LOADING,\n} from \"../actions/types\";\nconst initialState = {\n  status: {},\n  user: null,\n  token: null,\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_UP_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're creating your account...\",\n        },\n      };\n    case SIGN_UP:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SIGN_IN_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're checking your credentials...\",\n        },\n      };\n    case SIGN_IN:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import {\n  SET_SICK_STATUS,\n  SET_TESTED_STATUS,\n  LOADING,\n  SET_STORY,\n  SAVED_STORY,\n  SAVE_STORY_START,\n  FETCH_STORY_START,\n  FETCH_STORY,\n  INVALID_STORY,\n  SUBMIT_TRAVELS_START,\n  SUBMIT_TRAVELS,\n  SUBMIT_CLOSE_CONTACTS,\n  SUBMIT_CLOSE_CONTACTS_START,\n  SET_MY_STORY,\n  SUBMIT_MY_STORY,\n} from \"../actions/types\";\n\nconst initialState = {\n  status: {},\n  story: null,\n  travels: [],\n  closeContacts: [],\n  tempMyStory: \"\",\n  tempStory: null,\n};\n\nconst story = (state = initialState, action) => {\n  switch (action.type) {\n    case SAVE_STORY_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your story...\",\n        },\n      };\n    case SAVED_STORY:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_STORY:\n      return {\n        ...state,\n        tempStory: action.payload,\n      };\n    case SET_SICK_STATUS:\n      return {\n        ...state,\n        story: { ...state.story, sick: action.payload },\n      };\n    case SET_TESTED_STATUS:\n      return {\n        ...state,\n        story: { ...state.story, tested: action.payload },\n      };\n    case SUBMIT_MY_STORY:\n      return {\n        ...state,\n        tempMyStory: null,\n        story: {\n          ...state.story,\n          latestMyStory: action.payload.latestMyStory,\n        },\n      };\n    case FETCH_STORY_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're finding your story...\",\n        },\n      };\n    case FETCH_STORY:\n      return { ...state, ...action.payload };\n    case SUBMIT_TRAVELS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your travel info...\",\n        },\n      };\n    case SUBMIT_TRAVELS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SUBMIT_CLOSE_CONTACTS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your close contacts info...\",\n        },\n      };\n    case SUBMIT_CLOSE_CONTACTS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case INVALID_STORY:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_MY_STORY:\n      return {\n        ...state,\n        tempMyStory: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import {\n  LOADING,\n  FETCH_SYMPTOMS_START,\n  FETCH_SYMPTOMS,\n} from \"../actions/types\";\nconst initialState = {\n  status: {},\n  all: [],\n  selected: [],\n};\n\nconst symptoms = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SYMPTOMS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're fetching all relevant symptoms...\",\n        },\n      };\n    case FETCH_SYMPTOMS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default symptoms;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport story from \"./story\";\nimport symptoms from \"./symptoms\";\n\nexport default combineReducers({\n  auth,\n  symptoms,\n  story,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"reducers\";\n\nfunction configureStore(initialState) {\n  const middleware = [];\n  const enhancers = [];\n  middleware.push(thunk);\n\n  // Logging Middleware\n  const logger = createLogger({\n    level: \"info\",\n    collapsed: true,\n  });\n\n  // Skip redux logs in console during the tests\n  if (process.env.NODE_ENV !== \"test\") {\n    middleware.push(logger);\n  }\n\n  // from https://github.com/zalmoxisus/redux-devtools-extension\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const enhancer = composeEnhancers(...enhancers);\n\n  return createStore(rootReducer, initialState, enhancer);\n}\n\nconst store = configureStore({});\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport \"css/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport MyStory from \"routes/MyStory\";\nimport paths from \"routes/paths\";\nimport SignIn from \"routes/SignIn\";\nimport SignUp from \"routes/SignUp\";\nimport StoryHistory from \"routes/StoryHistory\";\nimport User from \"routes/User\";\nimport Reading from \"routes/Reading\";\nimport history from \"./history\";\nimport store from \"store/configureStore\";\nimport Publish from \"routes/Publish\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ReactGA from \"react-ga\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Test from \"routes/Test\";\n\nconst TRACKINGID = \"UA-179246573-1\"; // Replace with your Google Analytics tracking ID\nReactGA.initialize(TRACKINGID);\n\n// Initialize google analytics page view tracking\nhistory.listen((location) => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <Navbar className=\"custom-nav\" sticky=\"top\">\n          <Navbar.Brand className=\"navbar__brand\" href=\"./\">\n            OASIS\n          </Navbar.Brand>\n          <Nav>\n            <Nav.Link className=\"navbar__signin\" href=\"./signin\">\n              Sign In\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n\n        <Switch>\n          <Route exact path={paths.home} component={Home} />\n          <Route path={paths.signIn} component={SignIn} />\n          <Route path={paths.signUp} component={SignUp} />\n          <Route path={paths.user} component={User} />\n          <Route path={paths.myStory} component={MyStory} />\n          <Route path={paths.storyHistory} component={StoryHistory} />\n          <Route path={paths.reading} component={Reading} />\n          <Route path={paths.publish} component={Publish} />\n          <Route path={paths.test} component={Test} />\n        </Switch>\n      </Router>\n    </MuiPickersUtilsProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { Button, Form, Container, Row, Card } from \"react-bootstrap\";\nimport React from \"react\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\nimport history from \"history.js\";\n\nexport default function Home() {\n  const example = text.micropubCard;\n\n  return (\n    <div className=\"home light-bg\">\n      <Container>\n        <Row className=\"header\">\n          <div className=\"headlines\">\n            <div className=\"headline--black mb-4\">\n              <b>Get</b> and <b>Share</b> rapid science micropubs for COVID-19\n            </div>\n            <div className=\"headline--blue mb-2\">\n              <b>Get</b> answers on the latest research from other experts in\n              the field.\n            </div>\n            <div className=\"headline--blue\">\n              <b>Share</b> your research with the world through\n              micro-publications.\n            </div>\n          </div>\n          <Form className=\"signup__container\">\n            <div className=\"signup__header\">Join OASIS</div>\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"First Name\"\n            />\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"Last name\"\n            />\n            <Form.Control\n              type=\"email\"\n              className=\"signup__textbox\"\n              placeholder=\"Email\"\n            />\n            <Form.Control\n              type=\"password\"\n              className=\"signup__textbox\"\n              placeholder=\"Password\"\n            />\n            <Button\n              className=\"btn--md\"\n              type=\"submit\"\n              onClick={() => history.push(\"/user\")}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Row>\n\n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">What is a MICROPUB(LICATION)?</div>\n          <Card>\n            <Card.Body>\n              <Card.Text>{text.intro}</Card.Text>\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row className=\"preview\">\n          <p className=\"preview__subtitle\">Featured QUESTIONS AND MICROPUBS</p>\n          <div className=\"mp-list\">\n            <MicropubCard\n              img={example.img}\n              authors={example.authors}\n              title={example.title}\n              text={example.text}\n              id={example.id}\n            ></MicropubCard>\n            <MicropubCard\n              img={example.img}\n              authors={example.authors}\n              title={example.title}\n              text={example.text}\n              id={example.id}\n            ></MicropubCard>\n          </div>\n        </Row>\n        {/* \n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">\n            Questions Inspired by Stories from the pandemic\n          </div>\n        </Row> */}\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport history from \"../../history\";\n\nexport default function index() {\n  function handleSignIn() {\n    history.push(\"/user\");\n  }\n  return (\n    <div className=\"signin light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Sign In</div>\n        <Form.Group>\n          <Form.Control\n            type=\"email\"\n            className=\"signup__textbox\"\n            placeholder=\"Email\"\n          />\n          <Form.Control\n            type=\"password\"\n            className=\"signup__textbox\"\n            placeholder=\"Password\"\n          />\n\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\n        </Form.Group>\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={() => handleSignIn()}\n        >\n          Sign In\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport history from \"../../history\";\n\nexport default function index() {\n  function handleSignUp() {\n    history.push(\"/user\");\n  }\n  return (\n    <div className=\"signup light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Join OASIS</div>\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"First Name\"\n        />\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"Last name\"\n        />\n        <Form.Control\n          type=\"email\"\n          className=\"signup__textbox\"\n          placeholder=\"Email\"\n        />\n        <Form.Control\n          type=\"password\"\n          className=\"signup__textbox\"\n          placeholder=\"Password\"\n        />\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={() => handleSignUp()}\n        >\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Col, ListGroup, Row, Container, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BsFillPlusSquareFill } from \"react-icons/bs\";\nimport ListItem from \"components/ListItem\";\nimport Question from \"components/Question\";\nimport history from \"history.js\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function User() {\n  const user = { name: \"User\", id: -1, img: \"http://placekitten.com/60/60\" };\n  const exampleQuestion = text.question;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <Container className=\"userpage\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <Row className=\"max-window\">\n        <Col>\n          <div className=\"welcome heading\">\n            <img src={user.img} alt=\"user-avatar\" className=\"avatar--lg\"></img>\n            Welcome, {user.name}\n          </div>\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Micropubs{\" \"}\n              <Button\n                className=\"btn--blue btn--lg\"\n                onClick={() => history.push(\"/publish\")}\n              >\n                <BsFillPlusSquareFill />\n                Create a Micropub\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--small\">\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"micropub\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n            </ListGroup>\n          </div>\n\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Question & Answers\n              <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n                <MdQuestionAnswer close={handleClose} />\n                Ask a Question\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--small\">\n              <ListItem\n                type=\"question\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"answer\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n              <ListItem\n                type=\"question\"\n                title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n              ></ListItem>\n            </ListGroup>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"block\">\n            <div className=\"heading\">\n              My Feeds\n              <Button className=\"btn--blue btn--lg\">\n                Browse Open Questions\n              </Button>\n            </div>\n            <ListGroup className=\"list-group--large\">\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                id={exampleQuestion.id}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                id={exampleQuestion.id}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                id={exampleQuestion.id}\n                ansNum={0}\n              />\n              <Question\n                asker={exampleQuestion.asker}\n                title={exampleQuestion.title}\n                id={exampleQuestion.id}\n                ansNum={0}\n              />\n            </ListGroup>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { TextField, Fab } from \"@material-ui/core\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport classNames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submitMyStory } from \"actions/story\";\nimport paths from \"routes/paths\";\n\nexport default function MyStory(props) {\n  const [myStory, setMyStory] = useState(\"\");\n  const { story } = useSelector((state) => state.story);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    setMyStory(event.target.value);\n  };\n\n  const handleSubmitStory = () => {\n    if (!myStory || myStory.length === 0) {\n      document.getElementById(\"warning\").innerHTML =\n        \"Your story is empty. Please write a few words to sumbit.\";\n    } else {\n      document.getElementById(\"warning\").innerHTML = \"\";\n      var storyId = story.id;\n      dispatch(submitMyStory(storyId, myStory));\n      props.history.push(paths.storyHistory);\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">SHARE MY COVID-19 STORY</h1>\n      <div id=\"warning\" style={{ marginBottom: \"20px\", color: \"red\" }}></div>\n      <TextField\n        id=\"outlined-multiline-static\"\n        placeholder=\"We want to learn from your experience to help overcome the pandemic. We all have a COVID-19 story, share yours!\"\n        multiline\n        rowsMax={10}\n        value={myStory}\n        onChange={handleChange}\n        className={classNames(\"textarea\", styles.textarea)}\n        variant=\"outlined\"\n      />\n      <Fab\n        style={{\n          background: \"#EA2027\",\n          width: 200,\n          margin: \"1.5rem auto 0 auto\",\n        }}\n        aria-label=\"add\"\n        size=\"medium\"\n        className=\"fab\"\n        variant=\"extended\"\n        onClick={handleSubmitStory}\n      >\n        SHARE MY STORY\n      </Fab>\n      <Fab\n        style={{ background: \"#9206FF\" }}\n        aria-label=\"add\"\n        onClick={() => props.history.push(paths.storyHistory)}\n        size=\"medium\"\n        className=\"fab back-btn\"\n      >\n        <ArrowLeftIcon />\n      </Fab>\n      <Fab\n        style={{ background: \"#EA2027\" }}\n        aria-label=\"Go to next page\"\n        size=\"medium\"\n        className=\"fab next-btn\"\n        onClick={() => props.history.push(paths.dashboard)}\n      >\n        <MapIcon />\n      </Fab>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Button, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer, MdRateReview } from \"react-icons/md\";\nimport { BsCloudDownload, BsStar } from \"react-icons/bs\";\nimport MicropubBody from \"components/MicropubBody\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function Reading() {\n  const example = text.micropub;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <Container className=\"reading\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <MicropubBody\n        title={example.title}\n        img={example.img}\n        text={example.text}\n      />\n      <div className=\"sidebar\">\n        <div className=\"info\">\n          <div className=\"publish-time\">\n            <div className=\"label\">Published:</div>\n            <div className=\"time\">{example.publishTime}</div>\n          </div>\n          <div className=\"authors\">\n            <div className=\"label\">Author(s):</div>\n            <div className=\"list\">\n              {example.authors\n                ? example.authors.map((author) => (\n                    <a href={author.link} key={author.id}>\n                      <img\n                        src={author.img}\n                        className=\"avatar--sm\"\n                        alt=\"avatar\"\n                      />\n                      {author.name}\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"data\">\n            <div className=\"label\">Data and Resources:</div>\n            <div className=\"list\">\n              {example.data\n                ? example.data.map((file) => (\n                    <a href={file.link} key={file.id}>\n                      {file.name}\n                      <BsCloudDownload className=\"sidebar__icon\" />\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"reviews\">\n            <div className=\"label\">Reviews:</div>\n            <div className=\"stars\">\n              <BsStar /> <BsStar /> <BsStar /> <BsStar /> <BsStar />(\n              {example.reviewNum})\n            </div>\n          </div>\n          <Button className=\"btn--white\">View Related Questions</Button>\n        </div>\n        <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n          <MdQuestionAnswer />\n          Ask a Question\n        </Button>\n        <Button className=\"btn--blue btn--lg\">\n          <MdRateReview />\n          Write a Review\n        </Button>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Button,\n  Col,\n  Dropdown,\n  DropdownButton,\n  ListGroup,\n  Row,\n  Tab,\n  Table,\n} from \"react-bootstrap\";\nimport { BiGlobe } from \"react-icons/bi\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\nimport MicropubBody from \"components/MicropubBody\";\nimport history from \"history.js\";\n\nexport default function Publish() {\n  const exampleCard = text.micropubCard;\n  const exampleBody = text.micropub;\n  const abstract = <div>abstract</div>;\n  const resources = <div>resources</div>;\n  const body = <div>body</div>;\n\n  const preview = (\n    <div className=\"preview\">\n      <div className=\"label\">Card Preview</div>\n      <MicropubCard\n        img={exampleCard.img}\n        authors={exampleCard.authors}\n        title={exampleCard.title}\n        text={exampleCard.text}\n        id={exampleCard.id}\n      ></MicropubCard>\n      <div className=\"label\">Micropub Preview</div>\n      <MicropubBody\n        title={exampleBody.title}\n        img={exampleBody.img}\n        text={exampleBody.text}\n      />\n    </div>\n  );\n\n  return (\n    <div id=\"publish\">\n      <Tab.Container defaultActiveKey=\"#abstract\">\n        <Row className=\"max-window\">\n          <Col className=\"tabs\">\n            <h2 className=\"heading\">Create a Micropub</h2>\n            <ListGroup defaultActiveKey=\"#abstract\">\n              <ListGroup.Item action href=\"#abstract\">\n                Abstract\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#resources\">\n                Data and Resources\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#body\">\n                Body\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#preview\">\n                Preview\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#abstract\">{abstract}</Tab.Pane>\n              <Tab.Pane eventKey=\"#resources\">{resources}</Tab.Pane>\n              <Tab.Pane eventKey=\"#body\">{body}</Tab.Pane>\n              <Tab.Pane eventKey=\"#preview\">{preview}</Tab.Pane>\n            </Tab.Content>\n          </Col>\n          <Col className=\"sidebar\">\n            <div className=\"list\">\n              <div className=\"label\">Authors</div>\n              <div className=\"search\">\n                Add Author: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Visibility</div>\n              <DropdownButton\n                title={\n                  <div>\n                    <BiGlobe />\n                    Public\n                  </div>\n                }\n                id=\"bg-vertical-dropdown-2\"\n              >\n                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n              </DropdownButton>\n            </div>\n            <div>\n              <div className=\"label\">Keywords</div>\n              <div className=\"search\">\n                Add Keyword: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Uploaded Resources</div>\n              <Table></Table>\n            </div>\n            <div style={{ flex: 1, background: \"none\" }}></div>\n            <div className=\"controls\">\n              <Button className=\"btn--sm btn--lightblue\" variant=\"primary\">\n                Save\n              </Button>\n              <Button className=\"btn--sm btn--blue\" variant=\"primary\">\n                Publish\n              </Button>\n              <Button\n                className=\"btn--sm btn--discard\"\n                variant=\"danger\"\n                onClick={() => history.push(\"/user\")}\n              >\n                Discard\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function index() {\n  return (\n    <div>\n      <AddQuestion />\n    </div>\n  );\n}\n"],"sourceRoot":""}