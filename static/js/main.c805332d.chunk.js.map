{"version":3,"sources":["components/MicropubCard.js","routes/Home.js","paths.js","routes/SignIn.js","routes/SignUp.js","components/ListItem.js","components/Question.js","history.js","components/AddQuestion.js","routes/User.js","components/MicropubBody.js","routes/Read.js","routes/Publish.js","serviceWorker.js","routes/Test.js","components/CustomNavbar.js","index.js"],"names":["MicropubCard","props","Card","className","Img","src","figure","alt","Title","title","Text","abstract","Home","apikey","apiusername","useState","micropubs","setMicropubs","e","a","preventDefault","options","method","url","headers","Prefer","data","firstName","lastName","email","password","axios","request","then","response","console","log","localStorage","setItem","JSON","stringify","window","location","replace","catch","error","useEffect","Container","Row","Form","Control","type","placeholder","Button","onClick","handleSignUp","text","intro","map","item","i","authorIds","authorNames","id","key","paths","home","signIn","signUp","user","read","publish","test","SignIn","Group","Check","label","handleSignIn","href","SignUp","ListItem","iconMapping","micropub","question","answer","Question","num","ansNum","createBrowserHistory","AddQuestion","as","DropdownButton","Dropdown","Item","eventKey","close","User","exampleQuestion","show","setShow","handleClose","Modal","onHide","history","push","ListGroup","asker","uid","MicropubBody","img","body","Read","example","time","moment","unix","publishTime","format","author","link","name","file","reviewNum","Publish","value","setValue","onChange","resources","onDrop","acceptedFiles","maxSize","multiple","accept","getRootProps","getInputProps","reference","preview","Tab","defaultActiveKey","action","Content","Pane","Table","style","flex","background","variant","Boolean","hostname","match","Test","CustomNavbar","auth","Navbar","sticky","Brand","Nav","FormControl","aria-label","ButtonGroup","align","lg","profilePic","drop","clear","Link","App","setUser","parse","getItem","userId","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c805332d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function MicropubCard(props) {\n  return (\n    <Card className=\"micropub\">\n      <div className=\"content\">\n        <Card.Img src={props.figure} alt=\"img\" />\n        <div>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.abstract}</Card.Text>\n        </div>\n      </div>\n      <div className=\"authors\">\n        {/* {props.authors\n          ? props.authors.map((author) => (\n              <Card.Link href={author.link} key={author.id}>\n                <img src={author.img} className=\"avatar--sm\" alt=\"avatar\" />\n                {author.name}\n              </Card.Link>\n            ))\n          : \"\"} */}\n      </div>\n    </Card>\n  );\n}\n","import { Button, Form, Container, Row } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\n\n//import { useEffect, useState } from \"react\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\n//import history from \"history.js\";\n//import posts from \"posts.json\"\nimport axios from \"axios\";\n\nexport default function Home(apikey, apiusername) {\n  //const example = text.micropub;\n  const [micropubs, setMicropubs] = useState([]);\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      url: \"https://stoplight.io/mocks/oasis/oasis/19253909/fetch/micropubs/2\",\n      headers: { \"Content-Type\": \"application/json\", Prefer: \"\" },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(response.data);\n        setMicropubs(response.data);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, []);\n\n  async function handleSignUp(e) {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      url: \"https://stoplight.io/mocks/oasis/oasis/19253909/signup\",\n      headers: { \"Content-Type\": \"application/json\", Prefer: \"\" },\n      data: {\n        firstName: \"Alice\",\n        lastName: \"Smith\",\n        email: \"alice.smith@gmail.com\",\n        password: \"1234\",\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(response.data);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        window.location.replace(\"/user\");\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  // const [ latestposts, setLatestposts ] = useState([])\n  //\n  // useEffect(() => {\n  //   fetch('https://discourse.earth2.ucsd.edu/posts.json', {\n  //     method: 'GET',\n  //     headers: {\n  //\n  //       'Api-Key': \"\",\n  //       'Api-Username': 'system'\n  //     }\n  //   })\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         data.latest_posts.forEach (post => setLatestposts(latestposts => [...latestposts, post]))\n  //\n  //       }).catch(err => console.log(err))\n  // })\n\n  return (\n    <div className=\"home light-bg\">\n      <Container>\n        <Row className=\"header\">\n          <div className=\"headlines\">\n            <div className=\"headline--black mb-4\">\n              <b>Get</b> and <b>Share</b> rapid science micropubs for COVID-19\n            </div>\n            <div className=\"headline--blue mb-2\">\n              <b>Get</b> answers on the latest research from other experts in\n              the field.\n            </div>\n            <div className=\"headline--blue\">\n              <b>Share</b> your research with the world through\n              micro-publications.\n            </div>\n          </div>\n          <Form className=\"signup__container\">\n            <div className=\"signup__header\">Join OASIS</div>\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"First Name\"\n            />\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"Last name\"\n            />\n            <Form.Control\n              type=\"email\"\n              className=\"signup__textbox\"\n              placeholder=\"Email\"\n            />\n            <Form.Control\n              type=\"password\"\n              className=\"signup__textbox\"\n              placeholder=\"Password\"\n            />\n            <Button\n              className=\"btn--md\"\n              type=\"submit\"\n              onClick={(e) => handleSignUp(e)}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Row>\n\n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">What is a MICROPUB(LICATION)?</div>\n          <div className=\"definition\">{text.intro}</div>\n        </Row>\n        <Row className=\"preview\">\n          <p className=\"preview__subtitle\">Featured QUESTIONS AND MICROPUBS</p>\n          <div className=\"mp-list\">\n            {micropubs\n              ? micropubs.map((item, i) => (\n                  <MicropubCard\n                    figure={item.figure}\n                    authorIds={item.authorNames}\n                    title={item.title}\n                    abstract={item.abstract}\n                    id={item.id}\n                    key={i}\n                  ></MicropubCard>\n                ))\n              : \"\"}\n          {/*  <MicropubCard*/}\n          {/*    img={example.img}*/}\n          {/*    authorIds={example.authorIds}*/}\n          {/*    title={example.title}*/}\n          {/*    abstract={example.abstract}*/}\n          {/*    uid={example.uid}*/}\n          {/*></MicropubCard>*/}\n\n          {/*  {posts.latest_posts.slice(0,3).map(post =>*/}\n          {/*      <MicropubCard*/}\n          {/*          img={example.img}*/}\n          {/*          authorIds={post.username}*/}\n          {/*          title={post.topic_html_title}*/}\n          {/*          abstract={post.raw}*/}\n          {/*          uid={post.id}*/}\n          {/*      ></MicropubCard>*/}\n          {/*  )*/}\n          {/*  }*/}\n\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","const paths = {\n  home: \"/\",\n  signIn: \"/signin\",\n  signUp: \"/signup\",\n  user: \"/user\",\n  read: \"/read\",\n  publish: \"/publish\",\n  test: \"/test\",\n};\n\nexport default paths;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default function SignIn() {\n  async function handleSignIn(e) {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      url: \"https://stoplight.io/mocks/oasis/oasis/19253909/signin\",\n      headers: { \"Content-Type\": \"application/json\", Prefer: \"\" },\n      data: { email: \"alice.smith@gmail.com\", password: \"1234\" },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(response.data);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        window.location.replace(\"/user\");\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"signin light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Sign In</div>\n        <Form.Group>\n          <Form.Control\n            type=\"email\"\n            className=\"signup__textbox\"\n            placeholder=\"Email\"\n          />\n          <Form.Control\n            type=\"password\"\n            className=\"signup__textbox\"\n            placeholder=\"Password\"\n          />\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\n        </Form.Group>\n\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={(e) => handleSignIn(e)}\n        >\n          Sign In\n        </Button>\n        <a href=\"/signup\">New to OASIS? Sign up now</a>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default function SignUp() {\n  async function handleSignUp(e) {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      url: \"https://stoplight.io/mocks/oasis/oasis/19253909/signup\",\n      headers: { \"Content-Type\": \"application/json\", Prefer: \"\" },\n      data: {\n        firstName: \"Alice\",\n        lastName: \"Smith\",\n        email: \"alice.smith@gmail.com\",\n        password: \"1234\",\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(response.data);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        window.location.replace(\"/user\");\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n  return (\n    <div className=\"signup light-bg max-window\">\n      <Form className=\"signup__container\">\n        <div className=\"signup__header\">Join OASIS</div>\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"First Name\"\n        />\n        <Form.Control\n          type=\"test\"\n          className=\"signup__textbox\"\n          placeholder=\"Last name\"\n        />\n        <Form.Control\n          type=\"email\"\n          className=\"signup__textbox\"\n          placeholder=\"Email\"\n        />\n        <Form.Control\n          type=\"password\"\n          className=\"signup__textbox\"\n          placeholder=\"Password\"\n        />\n\n        <Button\n          className=\"btn--md\"\n          type=\"submit\"\n          onClick={(e) => handleSignUp(e)}\n        >\n          Sign Up\n        </Button>\n        <a href=\"/signin\">Already have an account? Sign in here</a>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BsBook, BsQuestionCircle, BsCardText } from \"react-icons/bs\";\n\nexport default function ListItem(props) {\n  const iconMapping = {\n    micropub: <BsBook />,\n    question: <BsQuestionCircle />,\n    answer: <BsCardText />,\n  };\n  const type = props.type;\n  const title = props.title;\n\n  return (\n    <a className={`listitem__${type} listitem`} href=\"/read\">\n      {iconMapping[type]} {title}\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Question(props) {\n  const num = props.ansNum;\n // const asker = props.askerId;\n  return (\n    <div id={props.id} className=\"question\">\n      <div className=\"body\">\n        <p>{props.title}</p>\n        <div className=\"control\">\n          {num > 1 ? `${num} answers` : `${num} answer`}\n          <Button className=\"btn--white btn--lg\">\n            Answer <span>Question</span>\n          </Button>\n        </div>\n      </div>\n      <div className=\"arrow-down\"></div>\n      {/*\n      <a href={asker.link} key={asker.id} className=\"asker\">\n        <img src={asker.img} className=\"avatar--sm\" alt=\"avatar\" />\n        {asker.name}\n      </a> */}\n    </div>\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { DropdownButton, Dropdown, Form, Button } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BiGlobe } from \"react-icons/bi\";\nexport default function AddQuestion(props) {\n  return (\n    <Form className=\"addquestion\">\n      <Form.Group className=\"inputs\">\n        <div className=\"heading\">Add a Question </div>\n        <Form.Control type=\"text\" placeholder=\"Question\" className=\"subject\" />\n        <Form.Control\n          as=\"textarea\"\n          placeholder=\"Descriptions\"\n          className=\"description\"\n        />\n        <div className=\"search\">\n          Keywords: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Make this question:\n          <DropdownButton\n            title={\n              <div>\n                <BiGlobe />\n                Public\n              </div>\n            }\n          >\n            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n          </DropdownButton>\n        </div>\n        <div className=\"search\">\n          Tag Researchers: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n        <div className=\"search\">\n          Tag a Micropub: <input type=\"text\" placeholder=\"Search\"></input>\n        </div>\n      </Form.Group>\n      <Form.Group className=\"controls\">\n        <Button className=\"btn--lg btn--cancel\" onClick={props.close}>\n          Cancel\n        </Button>\n        <Button className=\"btn--lg\">\n          <MdQuestionAnswer />\n          Ask a Question\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, ListGroup, Container, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport { BsFillPlusSquareFill } from \"react-icons/bs\";\nimport ListItem from \"components/ListItem\";\nimport Question from \"components/Question\";\nimport history from \"history.js\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function User() {\n  const user = {\n    name: \"User\",\n    id: -1,\n    img: \"https://source.unsplash.com/random\",\n  };\n  const exampleQuestion = text.question;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <Container className=\"userpage\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <div>\n        <div className=\"welcome heading\">\n          <img src={user.img} alt=\"user-avatar\" className=\"avatar--lg\"></img>\n          Welcome, {user.name}\n        </div>\n        <div className=\"block\">\n          <div className=\"heading\">\n            My Micropubs{\" \"}\n            <Button\n              className=\"btn--blue btn--lg\"\n              onClick={() => history.push(\"/publish\")}\n            >\n              <BsFillPlusSquareFill />\n              <span>Create a Micropub</span>\n            </Button>\n          </div>\n          <ListGroup className=\"list-group--small\">\n            <ListItem\n              type=\"micropub\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n            <ListItem\n              type=\"micropub\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n            <ListItem\n              type=\"micropub\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n          </ListGroup>\n        </div>\n\n        <div className=\"block\">\n          <div className=\"heading\">\n            My Question & Answers\n            <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n              <MdQuestionAnswer close={handleClose} />\n              <span>Ask a Question</span>\n            </Button>\n          </div>\n          <ListGroup className=\"list-group--small\">\n            <ListItem\n              type=\"question\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n            <ListItem\n              type=\"answer\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n            <ListItem\n              type=\"question\"\n              title=\"Looking at vaccine hesitancy through Behavioural Economics\"\n            ></ListItem>\n          </ListGroup>\n        </div>\n      </div>\n      <div>\n        <div className=\"block\">\n          <div className=\"heading\">\n            My Feeds\n            <Button className=\"btn--blue btn--lg\">Browse Open Questions</Button>\n          </div>\n          <ListGroup className=\"list-group--large\">\n            <Question\n              asker={exampleQuestion.asker}\n              title={exampleQuestion.title}\n              uid={exampleQuestion.uid}\n              ansNum={0}\n            />\n            <Question\n              asker={exampleQuestion.asker}\n              title={exampleQuestion.title}\n              uid={exampleQuestion.uid}\n              ansNum={0}\n            />\n            <Question\n              asker={exampleQuestion.asker}\n              title={exampleQuestion.title}\n              uid={exampleQuestion.uid}\n              ansNum={0}\n            />\n            <Question\n              asker={exampleQuestion.asker}\n              title={exampleQuestion.title}\n              uid={exampleQuestion.uid}\n              ansNum={0}\n            />\n          </ListGroup>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nexport default function MicropubBody(props) {\n  return (\n    <div className=\"body\">\n      <div className=\"heading\">{props.title}</div>\n      <img src={props.img} alt=\"figure\"></img>\n      <div className=\"text\">{props.body}</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Button, Modal } from \"react-bootstrap\";\nimport { MdQuestionAnswer, MdRateReview } from \"react-icons/md\";\nimport { BsCloudDownload, BsStar } from \"react-icons/bs\";\nimport MicropubBody from \"components/MicropubBody\";\nimport text from \"text.json\";\nimport AddQuestion from \"components/AddQuestion\";\nimport moment from \"moment\";\n\nexport default function Read() {\n  const example = text.micropub;\n  const time = moment.unix(example.publishTime).format(\"MM/DD/YYYY\");\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <Container className=\"read\">\n      <Modal show={show} onHide={handleClose}>\n        <AddQuestion close={handleClose} />\n      </Modal>\n      <MicropubBody\n        title={example.title}\n        img={example.img}\n        body={example.body}\n      />\n      <div className=\"sidebar\">\n        <div className=\"info\">\n          <div className=\"publish-time\">\n            <div className=\"label\">Published:</div>\n            <div className=\"time\">{time}</div>\n          </div>\n          <div className=\"authors\">\n            <div className=\"label\">Author(s):</div>\n            <div className=\"list\">\n              {example.authorIds\n                ? example.authorIds.map((author) => (\n                    <a href={author.link} key={author.id}>\n                      <img\n                        src={author.img}\n                        className=\"avatar--sm\"\n                        alt=\"avatar\"\n                      />\n                      {author.name}\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"data\">\n            <div className=\"label\">Data and Resources:</div>\n            <div className=\"list\">\n              {example.data\n                ? example.data.map((file) => (\n                    <a href={file.link} key={file.id}>\n                      {file.name}\n                      <BsCloudDownload className=\"sidebar__icon\" />\n                    </a>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"reviews\">\n            <div className=\"label\">Reviews:</div>\n            <div className=\"stars\">\n              <BsStar /> <BsStar /> <BsStar /> <BsStar /> <BsStar />(\n              {example.reviewNum})\n            </div>\n          </div>\n          <Button className=\"btn--white\">View Related Questions</Button>\n        </div>\n        <div className=\"controls\">\n          <Button className=\"btn--blue btn--lg\" onClick={handleShow}>\n            <MdQuestionAnswer />\n            Ask a Question\n          </Button>\n          <Button className=\"btn--blue btn--lg\">\n            <MdRateReview />\n            Write a Review\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Dropdown,\n  DropdownButton,\n  ListGroup,\n  Tab,\n  Table,\n} from \"react-bootstrap\";\nimport { BiGlobe } from \"react-icons/bi\";\nimport MicropubCard from \"components/MicropubCard\";\nimport text from \"text.json\";\nimport MicropubBody from \"components/MicropubBody\";\nimport history from \"history.js\";\nimport Dropzone from \"react-dropzone\";\nimport { AiFillPicture } from \"react-icons/ai\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nexport default function Publish() {\n  const [value, setValue] = useState(\"\");\n\n  const example = text.micropub;\n\n  const abstract = (\n    <div className=\"abstract\">\n      <input\n        type=\"textarea\"\n        placeholder=\"What question would you like to answer?...\"\n      />\n      <ReactQuill value={value} onChange={setValue} />\n    </div>\n  );\n\n  const resources = (\n    <div>\n      <Dropzone\n        onDrop={(acceptedFiles) => console.log(acceptedFiles)}\n        maxSize={10000000}\n        multiple\n        accept=\".jpg, .png, .pdf, .csv, .tsv, .xlsx\"\n      >\n        {({ getRootProps, getInputProps }) => (\n          <section className=\"dropzone\">\n            <input {...getInputProps()} />\n            <div {...getRootProps()}>\n              <AiFillPicture />\n              <p className=\"label\">Drag Resources Here</p>\n              <p className=\"upload\">Or select from your computer...</p>\n              <div className=\"req\">\n                <p>.jpg .png .pdf .csv .tsv .xlsx</p>\n                <p>max file size: 10MB</p>\n              </div>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n  const body = <ReactQuill value={value} onChange={setValue} />;\n\n  const reference = (\n    <ReactQuill\n      placeholder=\"(Recommend Using Harvard Referencing Style)\"\n      onChange={setValue}\n    />\n  );\n\n  const preview = (\n    <div className=\"preview\">\n      <div className=\"label\">Card Preview</div>\n      <MicropubCard\n        img={example.img}\n        authorIds={example.authorIds}\n        title={example.title}\n        abstract={example.abstract}\n      ></MicropubCard>\n      <div className=\"label\">Micropub Preview</div>\n      <MicropubBody\n        title={example.title}\n        img={example.img}\n        body={example.body}\n      />\n    </div>\n  );\n\n  return (\n    <div id=\"publish\">\n      <Tab.Container defaultActiveKey=\"#abstract\">\n        <div className=\"max-window\">\n          <div className=\"tab__nav\">\n            <h2 className=\"heading\">Create a Micropub</h2>\n            <ListGroup defaultActiveKey=\"#abstract\">\n              <ListGroup.Item action href=\"#abstract\">\n                Abstract\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#resources\">\n                <span>Data and </span>Resources\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#body\">\n                Body\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#reference\">\n                Reference\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#preview\">\n                Preview\n              </ListGroup.Item>\n            </ListGroup>\n          </div>\n          <div className=\"tab__content\">\n            <Tab.Content>\n              <Tab.Pane eventKey=\"#abstract\">{abstract}</Tab.Pane>\n              <Tab.Pane eventKey=\"#resources\">{resources}</Tab.Pane>\n              <Tab.Pane eventKey=\"#body\">{body}</Tab.Pane>\n              <Tab.Pane eventKey=\"#reference\">{reference}</Tab.Pane>\n              <Tab.Pane eventKey=\"#preview\">{preview}</Tab.Pane>\n            </Tab.Content>\n          </div>\n          <div className=\"sidebar\">\n            <div className=\"list\">\n              <div className=\"label\">Authors</div>\n              <div className=\"search\">\n                Add Author: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Visibility</div>\n              <DropdownButton\n                title={\n                  <div>\n                    <BiGlobe />\n                    Public\n                  </div>\n                }\n                id=\"bg-vertical-dropdown-2\"\n              >\n                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n              </DropdownButton>\n            </div>\n            <div>\n              <div className=\"label\">Keywords</div>\n              <div className=\"search\">\n                Add Keyword: <input type=\"text\" placeholder=\"Search\"></input>\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Uploaded Resources</div>\n              <Table></Table>\n            </div>\n            <div style={{ flex: 1, background: \"none\" }}></div>\n            <div className=\"controls\">\n              <Button className=\"btn--sm btn--lightblue\" variant=\"primary\">\n                Save\n              </Button>\n              <Button className=\"btn--sm btn--blue\" variant=\"primary\">\n                Publish\n              </Button>\n              <Button\n                className=\"btn--sm btn--discard\"\n                variant=\"danger\"\n                onClick={() => history.push(\"/user\")}\n              >\n                Discard\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Tab.Container>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport default function Test() {\n  return (\n    <div>\n      <Test></Test>\n    </div>\n  );\n}\n","import {\n  Navbar,\n  Nav,\n  Form,\n  Button,\n  FormControl,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n  Modal,\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport { BsSearch } from \"react-icons/bs\";\nimport AddQuestion from \"components/AddQuestion\";\n\nexport default function CustomNavbar(props) {\n  function handleSignOut() {\n    localStorage.clear();\n    window.location.replace(\"/\");\n  }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  if (!props.auth)\n    return (\n      <Navbar className=\"custom-nav\" sticky=\"top\">\n        <Navbar.Brand className=\"navbar__brand\" href=\"./\">\n          OASIS\n        </Navbar.Brand>\n        <Nav>\n          <Nav.Link className=\"navbar__signin\" href=\"./signin\">\n            Sign In\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  else {\n    return (\n      <Navbar className=\"custom-nav\" sticky=\"top\">\n        <Modal show={show} onHide={handleClose}>\n          <AddQuestion close={handleClose} />\n        </Modal>\n        <Navbar.Brand className=\"navbar__brand\" href=\"./\">\n          OASIS\n        </Navbar.Brand>\n        <Nav>\n          <Form className=\"searchbar\">\n            <FormControl\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <Button variant=\"dark\">\n              <BsSearch />\n            </Button>\n          </Form>\n        </Nav>\n\n        <DropdownButton\n          className=\"user-avatar\"\n          as={ButtonGroup}\n          align={{ lg: \"end\" }}\n          title={\n            <img\n              src={props.user.profilePic}\n              drop=\"down\"\n              variant=\"light\"\n              alt=\"user avatar\"\n            />\n          }\n        >\n          <Dropdown.Item href=\"/user\">My Page</Dropdown.Item>\n          <Dropdown.Item href=\"/publish\">Publish</Dropdown.Item>\n          <Dropdown.Item onClick={handleShow}>Ask</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-2\">Settings</Dropdown.Item>\n          <Dropdown.Item onClick={() => handleSignOut()}>\n            Sign Out\n          </Dropdown.Item>\n        </DropdownButton>\n      </Navbar>\n    );\n  }\n}\n","import \"./css/index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport paths from \"paths\";\nimport SignIn from \"routes/SignIn\";\nimport SignUp from \"routes/SignUp\";\nimport User from \"routes/User\";\nimport Read from \"routes/Read\";\nimport history from \"./history\";\nimport Publish from \"routes/Publish\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Test from \"routes/Test\";\nimport CustomNavbar from \"components/CustomNavbar\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [user, setUser] = useState({ profilePic: \"\" });\n  const auth = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    if (auth) {\n      const options = {\n        method: \"GET\",\n        url: `https://stoplight.io/mocks/oasis/oasis/19253909/user/${auth.userId}`,\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n\n      axios\n        .request(options)\n        .then(function (response) {\n          console.log(response.data);\n          setUser(response.data);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    }\n  }, [auth]);\n\n  return (\n    <Router history={history}>\n      <CustomNavbar user={user} auth={auth} />\n      <Switch>\n        <Route exact path={paths.home} component={Home} />\n        <Route path={paths.signIn} component={SignIn} />\n        <Route path={paths.signUp} component={SignUp} />\n        <Route path={paths.user} component={User} />\n        <Route path={paths.read} component={Read} />\n        <Route path={paths.publish} component={Publish} />\n        <Route path={paths.test} component={Test} />\n      </Switch>\n    </Router>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}