{"version":3,"sources":["components/MicroPub/index.js","actions/types.js","routes/paths.js","history.js","utils.js","actions/story.js","actions/auth.js","components/FacebookBtn/index.js","components/GoogleBtn/index.js","routes/SignIn/index.js","components/Copyright/index.js","components/AuthPaper/index.js","routes/SignUp/index.js","routes/StoryHistory/index.js","reducers/auth.js","reducers/story.js","reducers/symptoms.js","reducers/index.js","store/configureStore.js","serviceWorker.js","routes/Micropub/index.js","index.js","routes/Home/index.js","routes/ResearcherProfile/index.js","routes/MyStory/index.js","routes/PublicProfile/index.js","routes/SignIn/styles.module.css","routes/SignUp/styles.module.css","components/AuthPaper/styles.module.css","routes/MyStory/styles.module.css","routes/StoryHistory/styles.module.css"],"names":["MicroPub","props","Card","className","Row","Img","src","img","Col","Title","title","Text","text","authors","map","author","Link","href","link","key","id","name","LOADING","paths","home","signIn","signUp","onboard","myStory","storyHistory","micropub","public","researcher","createBrowserHistory","api","path","a","payload","explicitBody","fullPayload","method","credentials","headers","body","JSON","stringify","Array","isArray","obj","parseObjectKeys","camelToSnakeCase","fetch","process","REACT_APP_API","window","location","host","response","status","history","push","json","element","snakeToCamelCase","error","code","type","detail","object","Object","keys","reduce","acc","str","replace","group","toUpperCase","toLowerCase","getCurrentStory","dispatch","travels","closeContacts","story","loginDTO","external","encodeURIComponent","email","password","dashboard","FacebookBtn","useDispatch","style","marginTop","marginBottom","appId","fields","callback","accessToken","dto","textButton","buttonStyle","width","height","borderRadius","fontSize","backgroundColor","fontWeight","padding","display","justifyContent","lineHeight","color","border","icon","alt","paddingRight","margin","CLIENT_ID","GoogleBtn","useState","loggedIn","setLoggedIn","clientId","buttonText","onLogoutSuccess","onFailure","console","log","render","renderPropos","background","fullWidth","variant","onClick","disbale","disabled","onSuccess","profileObj","cookiePolicy","responseType","useStyles","makeStyles","theme","form","spacing","maxWidth","submit","Copyright","Typography","align","Date","getFullYear","avatar","palette","secondary","main","container","AuthPaper","children","classes","styles","root","component","CssBaseline","paper","Avatar","overflowWrap","secondaryTail","typography","timeline","alignItems","initialState","user","token","auth","state","action","tempMyStory","tempStory","sick","tested","latestMyStory","all","selected","symptoms","combineReducers","store","middleware","enhancers","thunk","logger","createLogger","level","collapsed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","enhancer","createStore","rootReducer","configureStore","Boolean","hostname","match","Micropub","draggableMapRoutes","MutationObserver","mutations","some","mutation","attributeName","oldValue","target","observe","document","attributes","attributeFilter","attributeOldValue","characterData","characterDataOldValue","childList","subtree","addEventListener","e","origin","url_parts","split","data","Grid","url","position","ReactGA","initialize","listen","set","page","pathname","pageview","ReactDOM","utils","MomentUtils","Navbar","fixed","Brand","Button","exact","exampleMicroPub","aPost","mode","cache","redirect","then","forEach","post","Container","Form","Control","placeholder","Body","from","useSelector","formValues","setFormValues","validateEmail","test","handleSubmit","event","preventDefault","getElementById","innerText","classNames","noValidate","TextField","length","required","label","autoComplete","value","AutoFocus","onChange","helperText","justify","item","skipBtn","handleFormChange","xs","userDTO","ListGroup","Item","Header","as","Subtitle","setMyStory","multiline","rowsMax","textarea","Fab","aria-label","size","innerHTML","storyId","mystory","newMyStory","story_id","stories","setStories","useEffect","maxHeight","Timeline","sort","b","my_story","i","TimelineItem","TimelineOppositeContent","createdAt","TimelineSeparator","TimelineDot","TimelineConnector","content","TimelineContent","Paper","elevation","textAlign","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.0c56908f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\n\nexport default function MicroPub(props) {\n  return (\n    <Card className=\"micropub\">\n      <Row>\n        <Card.Img src={props.img} />\n        <Col>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.text}</Card.Text>\n        </Col>\n      </Row>\n      <div className=\"authors\">\n        {props.authors\n          ? props.authors.map((author) => (\n              <Card.Link href={author.link} key={author.id}>\n                <img src={author.img} className=\"avatar--sm\" />\n                {author.name}\n              </Card.Link>\n            ))\n          : \"\"}\n      </div>\n    </Card>\n  );\n}\n","export const GET_OVERALL = \"GET_OVERALL\";\nexport const SIGN_UP = \"SIGN_UP\";\nexport const SIGN_UP_START = \"SIGN_UP_START\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_IN_START = \"SIGN_IN_START\";\nexport const SET_SICK_STATUS = \"SET_SICK_STATUS\";\nexport const SET_TESTED_STATUS = \"SET_TESTED_STATUS\";\nexport const SUCCESS = \"SUCCESS\";\nexport const ERROR = \"ERROR\";\nexport const LOADING = \"LOADING\";\nexport const SET_STORY = \"SET_STORY\";\nexport const SAVE_STORY_START = \"SAVE_STORY_START\";\nexport const SAVED_STORY = \"SAVED_STORY\";\nexport const FETCH_SYMPTOMS_START = \"FETCH_SYMPTOMS_START\";\nexport const FETCH_SYMPTOMS = \"FETCH_SYMPTOMS\";\nexport const SUBMIT_SYMPTOMS_START = \"SUBMIT_SYMPTOMS_START\";\nexport const SUBMIT_SYMPTOMS = \"SUBMIT_SYMPTOMS\";\nexport const FETCH_STORY_START = \"FETCH_STORY_START\";\nexport const FETCH_STORY = \"FETCH_STORY\";\nexport const INVALID_STORY = \"INVALID_STORY\";\nexport const SUBMIT_TRAVELS_START = \"SUBMIT_TRAVELS_START\";\nexport const SUBMIT_TRAVELS = \"SUBMIT_TRAVELS\";\nexport const SUBMIT_CLOSE_CONTACTS_START = \"SUBMIT_CLOSE_CONTACTS_START\";\nexport const SUBMIT_CLOSE_CONTACTS = \"SUBMIT_CLOSE_CONTACTS\";\nexport const SET_MY_STORY = \"SET_MY_STORY\";\nexport const SUBMIT_MY_STORY = \"SUBMIT_MY_STORY\";\n","import { sicknessStatus } from \"routes/types\";\n\nconst paths = {\n  home: \"/\",\n  signIn: \"/signin\",\n  signUp: \"/signup\",\n  onboard: \"/onboard\",\n  myStory: \"/mystory\",\n  storyHistory: \"/storyhistory\",\n  micropub: \"/micropub\",\n  public: \"/public\",\n  researcher: \"/researcher\",\n};\n\nexport const getConfirmFlow = (state, sickness) => {\n  if (!state || state.onboard === false) return paths.criticalQuestions;\n  if (sickness === sicknessStatus.SICK) return paths.symptoms;\n  return paths.dashboard;\n};\n\nexport default paths;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { ERROR } from \"actions/types\";\nimport paths from \"routes/paths\";\nimport history from \"./history\";\n\nconst api = async (path, payload = {}, explicitBody = false) => {\n  const fullPayload = {\n    method: \"GET\",\n    credentials: \"include\",\n    ...payload,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...payload.headers,\n    },\n  };\n  if (payload.body) {\n    fullPayload.body = explicitBody\n      ? payload.body\n      : JSON.stringify(\n          Array.isArray(payload.body)\n            ? payload.body.map((obj) => parseObjectKeys(obj, camelToSnakeCase))\n            : parseObjectKeys(payload.body || {}, camelToSnakeCase)\n        );\n  }\n\n  let response = await fetch(\n    `${\n      process.env.REACT_APP_API || `https://${window.location.host}`\n    }/api/${path}`,\n    fullPayload\n  );\n  if (response.status === 401) history.push(paths.signIn);\n  // if everything was correct, process data\n  if (response.status >= 200 && response.status < 300) {\n    response = await response.json();\n    if (Array.isArray(response))\n      return response.map((element) =>\n        parseObjectKeys(element, snakeToCamelCase)\n      );\n    return parseObjectKeys(response, snakeToCamelCase);\n  }\n\n  // if we had a known error, return the proper status\n  const body = await response.json();\n  return {\n    error: {\n      code: response.status,\n      type: ERROR,\n      detail: body.detail || \"Unknown error! Please try again\",\n    },\n  };\n};\n\nexport const parseObjectKeys = (object, method) =>\n  Object.keys(object).reduce((acc, key) => {\n    if (Array.isArray(object[key])) {\n      acc[method(key)] = object[key].map((element) =>\n        typeof element === \"object\" && element !== null\n          ? parseObjectKeys(element, method)\n          : element\n      );\n    } else {\n      acc[method(key)] = object[key];\n    }\n    return acc;\n  }, {});\n\nexport const snakeToCamelCase = (str) =>\n  str.replace(/([-_][a-z])/g, (group) =>\n    group.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\")\n  );\n\nconst camelToSnakeCase = (str) => str.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n\nexport const getGeocoding = (city, state, country) => {\n  const MAPBOX_APIKEY =\n    \"pk.eyJ1IjoieXVzMjUyIiwiYSI6ImNrYTZhM2VlcjA2M2UzMm1uOWh5YXhvdGoifQ.ZIzOiYbBfwJsV168m42iFg\";\n\n  const query = city + \" \" + state + \" \" + country;\n  const url =\n    \"https://api.mapbox.com/geocoding/v5/mapbox.places/\" +\n    query +\n    \".json?access_token=\" +\n    MAPBOX_APIKEY;\n  return fetch(url)\n    .then((response) => response.json())\n    .then((jsondata) => {\n      if (\n        jsondata &&\n        jsondata.features &&\n        jsondata.features.length &&\n        jsondata.features[0].geometry &&\n        jsondata.features[0].geometry.coordinates &&\n        jsondata.features[0].geometry.coordinates.length >= 2\n      ) {\n        return jsondata.features[0].geometry.coordinates;\n      }\n    });\n};\n\nexport default api;\n","import api from \"utils\";\nimport history from \"../history\";\nimport {\n  SET_SICK_STATUS,\n  SET_TESTED_STATUS,\n  SET_STORY,\n  SAVED_STORY,\n  SAVE_STORY_START,\n  SUCCESS,\n  FETCH_STORY_START,\n  FETCH_STORY,\n  INVALID_STORY,\n  ERROR,\n  SUBMIT_TRAVELS_START,\n  SUBMIT_TRAVELS,\n  SUBMIT_CLOSE_CONTACTS_START,\n  SUBMIT_CLOSE_CONTACTS,\n  SET_MY_STORY,\n  SUBMIT_MY_STORY,\n} from \"./types\";\n\nexport const setStory = (story) => async (dispatch) => {\n  dispatch({\n    type: SET_STORY,\n    payload: story,\n  });\n};\n\nexport const submitStory = (dto, update = false) => async (dispatch) => {\n  if (!update) {\n    return dispatch({\n      type: INVALID_STORY,\n      payload: {\n        status: {\n          type: ERROR,\n        },\n      },\n    });\n  }\n\n  dispatch({ type: SAVE_STORY_START });\n  const { story, nextPage, travels, closeContacts } = dto;\n  const {\n    error,\n    travels: _travels,\n    closeContacts: _closeContacts,\n    ...updatedStory\n  } = await api(`stories/`, {\n    method: \"POST\",\n    body: story,\n  });\n\n  dispatch({\n    type: SAVED_STORY,\n    payload: {\n      status: error || { type: SUCCESS },\n      story: (!error && updatedStory) || null,\n      tempStory: null,\n    },\n  });\n\n  const storyId = updatedStory.id;\n  const sendTravels = () =>\n    travels.length && dispatch(submitTravels(travels, storyId));\n  const sendCloseContacts = () =>\n    closeContacts.length &&\n    dispatch(submitCloseContacts(closeContacts, storyId));\n  const anyError = await [sendTravels, sendCloseContacts].reduce(\n    async (error, func) => !(await error) && func(),\n    error\n  );\n\n  if (!anyError) {\n    history.push(nextPage);\n  }\n};\n\nexport const setMyStory = (myStory) => (dispatch) => {\n  dispatch({\n    type: SET_MY_STORY,\n    payload: myStory,\n  });\n};\n\nexport const submitMyStory = (id, mystory) => async (dispatch) => {\n  const payload = { latestMyStory: mystory };\n\n  dispatch({\n    type: SUBMIT_MY_STORY,\n    payload: payload,\n  });\n\n  const newMyStory = { text: mystory, story_id: id };\n  await api(`stories/${id}/my_stories`, {\n    method: \"POST\",\n    body: newMyStory,\n  });\n};\n\nexport const setSickStatus = (option) => (dispatch) => {\n  dispatch({\n    type: SET_SICK_STATUS,\n    payload: option,\n  });\n};\n\nexport const setTestedStatus = (option) => (dispatch) => {\n  dispatch({\n    type: SET_TESTED_STATUS,\n    payload: option,\n  });\n};\n\nexport const fetchStory = () => async (dispatch) => {\n  await getCurrentStory(dispatch);\n};\n\nexport const getCurrentStory = async (dispatch) => {\n  dispatch({ type: FETCH_STORY_START });\n  const { error, travels, closeContacts, ...story } = await api(\"stories/\");\n  dispatch({\n    type: FETCH_STORY,\n    payload: {\n      status: error || { type: SUCCESS },\n      story: (!error && story) || null,\n      travels: (!error && travels) || [],\n      closeContacts: (!error && closeContacts) || [],\n    },\n  });\n  return story;\n};\n\nconst submitTravels = (travels, storyId) =>\n  submitStoryComponents(storyId)(\n    \"travels\",\n    travels,\n    { type: SUBMIT_TRAVELS_START },\n    (errors, response) => ({\n      type: SUBMIT_TRAVELS,\n      payload: {\n        status: errors || { type: SUCCESS },\n        travels: (!errors && response) || [],\n      },\n    })\n  );\n\nconst submitCloseContacts = (closeContacts, storyId) =>\n  submitStoryComponents(storyId)(\n    \"contacts\",\n    closeContacts,\n    { type: SUBMIT_CLOSE_CONTACTS_START },\n    (errors, response) => ({\n      type: SUBMIT_CLOSE_CONTACTS,\n      payload: {\n        status: errors || { type: SUCCESS },\n        closeContacts: (!errors && response) || [],\n      },\n    })\n  );\n\nconst submitStoryComponents = (storyId) => (\n  path,\n  components,\n  before,\n  after\n) => async (dispatch) => {\n  dispatch(before);\n\n  let parsedComponents = components.map((component) => ({\n    ...component,\n    storyId,\n  }));\n  const newComponents = parsedComponents.filter(\n    (component) => !(\"id\" in component)\n  );\n  const updatedComponents = parsedComponents.filter(\n    (component) => \"id\" in component\n  );\n  const postResponse =\n    newComponents.length &&\n    (await api(`stories/${storyId}/${path}`, {\n      method: \"POST\",\n      body: newComponents,\n    }));\n\n  const putResponse =\n    updatedComponents.length &&\n    (await api(`stories/${storyId}/${path}`, {\n      method: \"PUT\",\n      body: updatedComponents,\n    }));\n\n  const errors = postResponse.error || putResponse.error;\n  const response = (!postResponse.error && postResponse\n    ? postResponse\n    : []\n  ).concat(!putResponse.error && putResponse ? putResponse : []);\n\n  dispatch(after(errors, response));\n  return errors;\n};\n","import {\n  SIGN_UP,\n  SIGN_IN,\n  SUCCESS,\n  SIGN_UP_START,\n  SIGN_IN_START,\n} from \"./types\";\nimport api from \"utils\";\nimport history from \"../history\";\nimport paths from \"routes/paths\";\n\nexport const signUp = (userDTO) => async (dispatch) => {\n  dispatch({ type: SIGN_UP_START });\n  const response = await api(`users`, {\n    method: \"POST\",\n    body: userDTO,\n  });\n  dispatch({\n    type: SIGN_UP,\n    payload: {\n      status: response.error || { type: SUCCESS },\n      user: (!response.error && response) || null,\n    },\n  });\n\n  if (!response.error) history.push(paths.signIn);\n};\n\nexport const signIn = (loginDTO, external = false) => async (dispatch) => {\n  dispatch({ type: SIGN_IN_START });\n  const response = await api(\n    external ? `auth/external` : `auth`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `username=${encodeURIComponent(loginDTO.email)}&password=${\n        loginDTO.password\n      }`,\n    },\n    true\n  );\n  dispatch({\n    type: SIGN_IN,\n    payload: {\n      status: response.error || { type: SUCCESS },\n    },\n  });\n\n  if (!response.error) {\n    // const story = await getCurrentStory(dispatch);\n    // if (!story || Object.entries(story).length === 0 || story.error) {\n    //   history.push(paths.onboard, { onboard: false });\n    // } else {\n    //   history.push(paths.dashboard);\n    // }\n    history.push(paths.dashboard);\n  }\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FacebookLogin from \"react-facebook-login\";\n\nimport { signIn } from \"../../actions/auth\";\n\nconst APP_ID = \"725054974718611\";\n\nexport default function FacebookBtn() {\n  const dispatch = useDispatch();\n\n  const onLoginSuccess = (response) => {\n    if (response.accessToken && response.email) {\n      const dto = {\n        email: response.email,\n        password: response.accessToken,\n      };\n\n      dispatch(signIn(dto, true));\n    }\n  };\n\n  return (\n    <div style={{ marginTop: \"16px\", marginBottom: \"12px\" }}>\n      <FacebookLogin\n        appId={APP_ID}\n        fields=\"name,email,picture\"\n        callback={onLoginSuccess}\n        textButton=\"SIGN IN WITH FACEBOOK\"\n        buttonStyle={{\n          width: \"100%\",\n          height: 36,\n          borderRadius: 4,\n          fontSize: 14,\n          backgroundColor: \"rgb(255, 255, 255)\",\n          fontWeight: 500,\n          padding: 0,\n          display: \"flex\",\n          justifyContent: \"center\",\n          lineHeight: \"36px\",\n          color: \"gray\",\n          border: \"none\",\n        }}\n        icon={\n          <img\n            alt=\"f\"\n            src=\"https://img.icons8.com/fluent/22/000000/facebook-new.png\"\n            style={{\n              paddingRight: \"5px\",\n              width: 22,\n              height: 22,\n              margin: \"5px 0\",\n            }}\n          />\n        }\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { signIn } from \"actions/auth\";\n\nconst CLIENT_ID =\n  \"194122770228-sf8dnv46cs5dsrqn8g29iksvico2urtb.apps.googleusercontent.com\";\n\nexport default function GoogleBtn() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const dispatch = useDispatch();\n\n  const onLoginSuccess = (response) => {\n    if (\n      response.accessToken &&\n      response.profileObj &&\n      response.profileObj.email\n    ) {\n      const dto = {\n        email: response.profileObj.email,\n        password: response.accessToken,\n      };\n      dispatch(signIn(dto, true));\n    }\n  };\n\n  const onLogoutSuccess = (response) => {\n    setLoggedIn(false);\n  };\n\n  const onLoginFailure = (response) => {\n    console.log(\"Failed to log in\");\n  };\n\n  const onLogoutFailure = (response) => {\n    console.log(\"Failed to log out\");\n  };\n\n  return (\n    <div>\n      {loggedIn ? (\n        <GoogleLogout\n          style={{ width: 140 }}\n          clientId={CLIENT_ID}\n          buttonText={\"LOGOUT\"}\n          onLogoutSuccess={onLogoutSuccess}\n          onFailure={onLogoutFailure}\n          render={(renderPropos) => (\n            <Button\n              style={{ background: \"white\", color: \"gray\" }}\n              fullWidth\n              variant=\"contained\"\n              onClick={renderPropos.onClick}\n              disbale={renderPropos.disabled}\n            >\n              <img\n                alt=\"g\"\n                src=\"https://img.icons8.com/color/24/000000/google-logo.png\"\n              />\n              Logout\n            </Button>\n          )}\n        />\n      ) : (\n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText=\"LOGIN WITH GOOGLE\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          responseType=\"code,token\"\n          render={(renderPropos) => (\n            <Button\n              style={{ background: \"white\", color: \"gray\" }}\n              fullWidth\n              variant=\"contained\"\n              onClick={renderPropos.onClick}\n              disbale={renderPropos.disabled}\n            >\n              <img\n                alt=\"g\"\n                src=\"https://img.icons8.com/color/20/000000/google-logo.png\"\n                style={{ paddingRight: \"5px\" }}\n              />\n              SIGN IN WITH GOOGLE\n            </Button>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport history from \"../../history\";\nimport { signIn } from \"actions/auth\";\nimport { ERROR } from \"actions/types\";\nimport paths from \"routes/paths\";\nimport FacebookBtn from \"components/FacebookBtn\";\nimport GoogleBtn from \"components/GoogleBtn\";\n\nimport styles from \"./styles.module.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    margin: theme.spacing(1),\n    maxWidth: 400,\n    padding: \"0 2rem 2rem 2rem\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const from = props.history.location.state\n    ? props.history.location.state.from\n    : \"\";\n\n  const { status, user } = useSelector((state) => state.auth);\n\n  const [formValues, setFormValues] = useState({\n    password: \"\",\n    email: (user && user.email) || \"\",\n  });\n\n  const validateEmail = (email) => {\n    // eslint-disable-next-line\n    const validEmailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return validEmailFormat.test(email);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!formValues.email || formValues.email === \"\") {\n      document.getElementById(\"incomplete_error\").innerText =\n        \"Please enter your email address\";\n    } else if (!formValues.password || formValues.password === \"\") {\n      document.getElementById(\"incomplete_error\").innerText =\n        \"Please enter your password\";\n    } else if (!validateEmail(formValues.email)) {\n      document.getElementById(\"incomplete_error\").innerText = \"\";\n    } else {\n      dispatch(signIn(formValues));\n    }\n  };\n\n  const form = () => (\n    <form className={classNames(classes.form, styles.form)} noValidate>\n      <TextField\n        error={formValues.email.length > 0 && !validateEmail(formValues.email)}\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoComplete=\"email\"\n        value={formValues.email}\n        fullWidth\n        AutoFocus\n        onChange={(event) =>\n          setFormValues({ ...formValues, email: event.target.value })\n        }\n        helperText={\n          formValues.email.length > 0 && !validateEmail(formValues.email)\n            ? \"Please enter a valid email.\"\n            : null\n        }\n      />\n      <TextField\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        value={formValues.password}\n        autoComplete=\"current-password\"\n        onChange={(event) =>\n          setFormValues({ ...formValues, password: event.target.value })\n        }\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={handleSubmit}\n      >\n        Sign In With Email\n      </Button>\n      <GoogleBtn />\n      <FacebookBtn />\n      {from === \"shareBtn\" && (\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link onClick={() => history.push(paths.signUp)} variant=\"body2\">\n              Don't have an account? Sign up\n            </Link>\n          </Grid>\n        </Grid>\n      )}\n    </form>\n  );\n\n  return (\n    <div>\n      <h1 className={styles.title}>Sign In</h1>\n      {status && status.detail && (\n        <p\n          className={classNames(\n            styles.status,\n            status.type === ERROR && styles.error\n          )}\n        >\n          {status.detail}\n        </p>\n      )}\n      <p id=\"incomplete_error\" style={{ color: \"red\" }}></p>\n      {form()}\n      {from === \"shareBtn\" && (\n        <Button\n          className={styles.skipBtn}\n          style={{ color: \"#ffffff80\" }}\n          onClick={() =>\n            props.history.push(paths.dashboard, { onboard: false })\n          }\n        >\n          continue as guest\n        </Button>\n      )}\n      {from !== \"shareBtn\" && (\n        <Button\n          className={styles.skipBtn}\n          style={{ color: \"#ffffff80\" }}\n          onClick={() => props.history.push(paths.home, { onboard: false })}\n        >\n          Don't have an account? Share Your Story First\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport history from \"../../history\";\nimport paths from \"routes/paths\";\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link\n        color=\"inherit\"\n        onClick={() => {\n          history.push(paths.home);\n        }}\n      >\n        OASIS\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Copyright from \"components/Copyright\";\n\nimport styles from \"./styles.module.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  container: {\n    maxWidth: \"350px\",\n    background: \"white\",\n    padding: \"1rem 2rem\",\n  },\n}));\n\nexport default function AuthPaper({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <Container className={classes.container} component=\"main\">\n        <CssBaseline />\n        <div className={styles.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          {children}\n        </div>\n        <Copyright />\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n\nimport { signUp } from \"actions/auth\";\nimport { ERROR } from \"actions/types\";\nimport styles from \"./styles.module.css\";\nimport paths from \"routes/paths\";\nimport AuthPaper from \"components/AuthPaper\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [formValues, setFormValues] = useState({\n    password: \"\",\n    email: \"\",\n  });\n\n  const validateEmail = (email) => {\n    // eslint-disable-next-line\n    const validEmailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return validEmailFormat.test(email);\n  };\n\n  const handleFormChange = (key) => (event) => {\n    setFormValues({ ...formValues, [key]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (formValues.email === \"\") {\n      document.getElementById(\"incomplete_error\").innerText =\n        \"Please enter your email\";\n    } else if (formValues.password === \"\") {\n      document.getElementById(\"incomplete_error\").innerText =\n        \"Please enter your password\";\n    } else if (!validateEmail(formValues.email)) {\n      document.getElementById(\"incomplete_error\").innerText = \"\";\n    } else {\n      dispatch(signUp(formValues));\n    }\n  };\n\n  const status = useSelector((state) => state.auth.status);\n\n  return (\n    <AuthPaper>\n      <h1 className={styles.title}>Sign Up</h1>\n      {status.detail && (\n        <p\n          className={classNames(\n            styles.status,\n            status.type === ERROR && styles.error\n          )}\n        >\n          {status.detail}\n        </p>\n      )}\n      <p id=\"incomplete_error\" style={{ color: \"red\" }}></p>\n      <form className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              error={\n                formValues.email.length > 0 && !validateEmail(formValues.email)\n              }\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={handleFormChange(\"email\")}\n              helperText={\n                formValues.email.length > 0 && !validateEmail(formValues.email)\n                  ? \"Please enter a valid email.\"\n                  : null\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={handleFormChange(\"password\")}\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link\n              onClick={() => props.history.push(paths.signIn)}\n              variant=\"body2\"\n            >\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </AuthPaper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab } from \"@material-ui/core\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport api from \"utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles.module.css\";\nimport classNames from \"classnames\";\nimport { fetchStory } from \"actions/story\";\nimport paths from \"routes/paths\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n    overflowWrap: \"anywhere\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  typography: {\n    maxWidth: \"12vw\",\n    overflowWrap: \"break-word\",\n  },\n  timeline: {\n    alignItems: \"baseline\",\n  },\n}));\n\nexport default function StoryHistory(props) {\n  const { story } = useSelector((state) => state.story);\n  const [stories, setStories] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!story) {\n      dispatch(fetchStory());\n    } else {\n      api(`stories/${story.id}/my_stories`, {\n        method: \"GET\",\n      }).then((data) => {\n        setStories(data);\n      });\n    }\n  }, [dispatch, story]);\n\n  const handleClick = () => {\n    props.history.push(paths.myStory);\n  };\n\n  return (\n    <>\n      <h2 className=\"title\">MY COVID-19 STORY HISTORY</h2>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n        style={{ marginTop: \"20px\" }}\n      >\n        Add New Story\n      </Button>\n      <div\n        className={classNames(\"root\", styles.root)}\n        style={{ marginTop: \"20px\", maxHeight: \"50vh\", maxWidth: \"600px\" }}\n      >\n        <Timeline className={classes.timeline}>\n          {stories\n            .sort((a, b) => b.id - a.id)\n            .map((my_story, i) => (\n              <TimelineItem key={i}>\n                <TimelineOppositeContent>\n                  <Typography component=\"h6\" className={classes.typography}>\n                    {my_story.createdAt}\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot></TimelineDot>\n                  <TimelineConnector />\n                </TimelineSeparator>\n                <div className={classes.content}>\n                  <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                      <Typography\n                        style={{\n                          textAlign: \"left\",\n                        }}\n                      >\n                        {my_story.text}\n                      </Typography>\n                    </Paper>\n                  </TimelineContent>\n                </div>\n              </TimelineItem>\n            ))}\n        </Timeline>\n        <Fab\n          style={{ background: \"#9206FF\" }}\n          aria-label=\"add\"\n          onClick={() => props.history.push(paths.dashboard)}\n          size=\"medium\"\n          className=\"fab back-btn\"\n        >\n          <ArrowLeftIcon />\n        </Fab>\n      </div>\n    </>\n  );\n}\n","import {\n  SIGN_UP,\n  SIGN_UP_START,\n  SIGN_IN,\n  SIGN_IN_START,\n  LOADING,\n} from \"../actions/types\";\nconst initialState = {\n  status: {},\n  user: null,\n  token: null,\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_UP_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're creating your account...\",\n        },\n      };\n    case SIGN_UP:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SIGN_IN_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're checking your credentials...\",\n        },\n      };\n    case SIGN_IN:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import {\n  SET_SICK_STATUS,\n  SET_TESTED_STATUS,\n  LOADING,\n  SET_STORY,\n  SAVED_STORY,\n  SAVE_STORY_START,\n  FETCH_STORY_START,\n  FETCH_STORY,\n  INVALID_STORY,\n  SUBMIT_TRAVELS_START,\n  SUBMIT_TRAVELS,\n  SUBMIT_CLOSE_CONTACTS,\n  SUBMIT_CLOSE_CONTACTS_START,\n  SET_MY_STORY,\n  SUBMIT_MY_STORY,\n} from \"../actions/types\";\n\nconst initialState = {\n  status: {},\n  story: null,\n  travels: [],\n  closeContacts: [],\n  tempMyStory: \"\",\n  tempStory: null,\n};\n\nconst story = (state = initialState, action) => {\n  switch (action.type) {\n    case SAVE_STORY_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your story...\",\n        },\n      };\n    case SAVED_STORY:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_STORY:\n      return {\n        ...state,\n        tempStory: action.payload,\n      };\n    case SET_SICK_STATUS:\n      return {\n        ...state,\n        story: { ...state.story, sick: action.payload },\n      };\n    case SET_TESTED_STATUS:\n      return {\n        ...state,\n        story: { ...state.story, tested: action.payload },\n      };\n    case SUBMIT_MY_STORY:\n      return {\n        ...state,\n        tempMyStory: null,\n        story: {\n          ...state.story,\n          latestMyStory: action.payload.latestMyStory,\n        },\n      };\n    case FETCH_STORY_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're finding your story...\",\n        },\n      };\n    case FETCH_STORY:\n      return { ...state, ...action.payload };\n    case SUBMIT_TRAVELS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your travel info...\",\n        },\n      };\n    case SUBMIT_TRAVELS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SUBMIT_CLOSE_CONTACTS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're saving your close contacts info...\",\n        },\n      };\n    case SUBMIT_CLOSE_CONTACTS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case INVALID_STORY:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_MY_STORY:\n      return {\n        ...state,\n        tempMyStory: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import {\n  LOADING,\n  FETCH_SYMPTOMS_START,\n  FETCH_SYMPTOMS,\n} from \"../actions/types\";\nconst initialState = {\n  status: {},\n  all: [],\n  selected: [],\n};\n\nconst symptoms = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SYMPTOMS_START:\n      return {\n        ...state,\n        status: {\n          type: LOADING,\n          detail: \"We're fetching all relevant symptoms...\",\n        },\n      };\n    case FETCH_SYMPTOMS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default symptoms;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport story from \"./story\";\nimport symptoms from \"./symptoms\";\n\nexport default combineReducers({\n  auth,\n  symptoms,\n  story,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"reducers\";\n\nfunction configureStore(initialState) {\n  const middleware = [];\n  const enhancers = [];\n  middleware.push(thunk);\n\n  // Logging Middleware\n  const logger = createLogger({\n    level: \"info\",\n    collapsed: true,\n  });\n\n  // Skip redux logs in console during the tests\n  if (process.env.NODE_ENV !== \"test\") {\n    middleware.push(logger);\n  }\n\n  // from https://github.com/zalmoxisus/redux-devtools-extension\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const enhancer = composeEnhancers(...enhancers);\n\n  return createStore(rootReducer, initialState, enhancer);\n}\n\nconst store = configureStore({});\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import Iframe from \"react-iframe\";\n//import IframeResizer from 'iframe-resizer-react'\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction Micropub(props, { draggableMapRoutes = [] }) {\n  // watch for a URL change\n  // flashpub Single Page App, so no change in url.\n  new MutationObserver(function (mutations) {\n    mutations.some(function (mutation) {\n      if (mutation.type === \"attributes\" && mutation.attributeName === \"src\") {\n        console.log(mutation);\n        console.log(\"Old src: \", mutation.oldValue);\n        console.log(\"New src: \", mutation.target.src);\n        return true;\n      }\n\n      return false;\n    });\n  }).observe(document.body, {\n    attributes: true,\n    attributeFilter: [\"src\"],\n    attributeOldValue: true,\n    characterData: false,\n    characterDataOldValue: false,\n    childList: false,\n    subtree: true,\n  });\n\n  // messaging.\n  var receiveMessage = function receiveMessage(e) {\n    if (\n      e.origin !== \"https://staging.outbreak.flashpub.io/\" ||\n      e.origin !== \"https://outbreak.flashpub.io/\"\n    )\n      return;\n\n    var url = window.location.href,\n      url_parts = url.split(\"/\"),\n      allowed = url_parts[0] + \"//\" + url_parts[2];\n\n    // Only react to messages from same domain as current document\n    //if (e.origin !== allowed) return;\n    // Handle the message\n    switch (e.data) {\n      case \"iframe_change\":\n        console.log(\"iframe_change\");\n        break;\n    }\n  };\n  window.addEventListener(\"message\", receiveMessage, false);\n\n  return (\n    <Grid container>\n      <Iframe\n        url=\"https://staging.outbreak.flashpub.io/publish/covid-19-diagnostics-assessment\"\n        width=\"450px\"\n        height=\"900px\"\n        id=\"flashPubId\"\n        className=\"myClassname\"\n        display=\"initial\"\n        position=\"relative\"\n      />\n    </Grid>\n  );\n  // return (\n  // <Grid\n  //     container>\n  //         <IframeResizer\n  //             url=\"https://staging.outbreak.flashpub.io/publish/covid-19-diagnostics-assessment\"\n  //         width=\"450px\"\n  //         height=\"900px\"\n  //         id=\"flashPubId\"\n  //         className=\"myClassname\"\n  //         display=\"initial\"\n  //         position=\"relative\"/>\n  //\n  // </Grid>\n  // )\n}\nexport default Micropub;\n","import MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport \"css/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport MyStory from \"routes/MyStory\";\nimport paths from \"routes/paths\";\nimport SignIn from \"routes/SignIn\";\nimport SignUp from \"routes/SignUp\";\nimport StoryHistory from \"routes/StoryHistory\";\nimport ResearcherProfile from \"routes/ResearcherProfile\";\nimport history from \"./history\";\nimport store from \"store/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Micropub from \"routes/Micropub\";\nimport ReactGA from \"react-ga\";\nimport { Navbar, Button, Form, FormControl } from \"react-bootstrap\";\nimport PublicProfile from \"routes/PublicProfile\";\n\nconst TRACKINGID = \"UA-179246573-1\"; // Replace with your Google Analytics tracking ID\nReactGA.initialize(TRACKINGID);\n\n// Initialize google analytics page view tracking\nhistory.listen((location) => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Router history={history}>\n        <Navbar className=\"custom-nav\" fixed=\"top\">\n          <Navbar.Brand className=\"navbar__brand\" href=\"#\">\n            OASIS\n          </Navbar.Brand>\n          <Button\n            className=\"button button--small button--white navbar__signin\"\n            variant=\"primary\"\n          >\n            Sign In\n          </Button>\n        </Navbar>\n\n        <Switch>\n          <Route exact path={paths.home} component={Home} />\n          <Route path={paths.micropub} component={Micropub} />\n          <Route path={paths.signIn} component={SignIn} />\n          <Route path={paths.signUp} component={SignUp} />\n          <Route path={paths.researcher} component={ResearcherProfile} />\n          <Route path={paths.myStory} component={MyStory} />\n          <Route path={paths.public} component={PublicProfile} />\n          <Route path={paths.storyHistory} component={StoryHistory} />\n        </Switch>\n      </Router>\n    </MuiPickersUtilsProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { Button, Form, Container, Row, Col, Card } from \"react-bootstrap\";\nimport React from \"react\";\nimport MicroPub from \"components/MicroPub\";\n\nexport default function Home() {\n  const text =\n    \"A micropub is a new way to rapidly share emerging science for single, validated results that include novel findings, negative and/or reproduced results, new methods, standards, common data elements or procedures.\";\n  const exampleMicroPub = {\n    img: \"https://dummyimage.com/145x190/000/fff.png\",\n    title: \"Which vaccine, according to research is the safest?\",\n    text:\n      \"Cheese and biscuits cauliflower cheese cream cheese. Monterey jack fromage frais stilton everyone loves edam jarlsberg monterey jack st. agur blue cheese. Cheesy grin swiss cheesecake say cheese cheese triangles paneer smelly cheese stinking bishop. Blue castello halloumi emmental...\",\n    id: -1,\n    authors: [\n      {\n        name: \"John Appleseed\",\n        id: -1,\n        img: \"http://placekitten.com/200/300\",\n        link: \"#\",\n      },\n    ],\n  };\n  var aPost =async(id) => {\n    fetch(`https://discourse.earth2.ucsd.edu/posts/{{id}}.json```,\n        {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Api-Key': 'application/json',\n            'Api-Username': ''\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow',\n        })\n        .then(response => response.json())\n        .then(data => console.log(data));\n  }\n  var latestPosts = fetch('https://discourse.earth2.ucsd.edu/posts.json',\n      {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Api-Key': 'application/json',\n          'Api-Username':''\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow',\n      } )\n      .then(response => {\n       var posts =  response.json()\n        posts.forEach((post) => {\n          exampleMicroPub = aPost(post.id)\n        })\n      })\n      .then(data => console.log(data));\n\n  return (\n    <div className=\"home\">\n      <Container>\n        <Row className=\"header\">\n          <div className=\"headlines\">\n            <div className=\"headline--black mb-4\">\n              <b>Get</b> and <b>Share</b> rapid science micropubs for COVID-19\n            </div>\n            <div className=\"headline--blue mb-2\">\n              <b>Get</b> answers on the latest research from other experts in\n              the field.\n            </div>\n            <div className=\"headline--blue\">\n              <b>Share</b> your research with the world through\n              micro-publications.\n            </div>\n          </div>\n          <Form className=\"signup__container\">\n            <div className=\"signup__header\">Join OASIS</div>\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"First Name\"\n            />\n            <Form.Control\n              type=\"test\"\n              className=\"signup__textbox\"\n              placeholder=\"Last name\"\n            />\n            <Form.Control\n              type=\"email\"\n              className=\"signup__textbox\"\n              placeholder=\"Email\"\n            />\n            <Form.Control\n              type=\"password\"\n              className=\"signup__textbox\"\n              placeholder=\"Password\"\n            />\n            <Button className=\"button button--small\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Row>\n\n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">What is a MICROPUB?</div>\n          <Card>\n            <Card.Body>\n              <Card.Text>{text}</Card.Text>\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row className=\"preview\">\n          <p className=\"preview__subtitle\">Featured QUESTIONS AND MICROPUBS</p>\n          <div className=\"mp-list\">\n            <MicroPub\n              img={exampleMicroPub.img}\n              authors={exampleMicroPub.authors}\n              title={exampleMicroPub.title}\n              text={exampleMicroPub.text}\n              id={exampleMicroPub.id}\n            ></MicroPub>\n            <MicroPub\n              img={exampleMicroPub.img}\n              authors={exampleMicroPub.authors}\n              title={exampleMicroPub.title}\n              text={exampleMicroPub.text}\n              id={exampleMicroPub.id}\n            ></MicroPub>\n          </div>\n        </Row>\n\n        <Row className=\"preview\">\n          <div className=\"preview__subtitle\">\n            Questions Inspired by Stories from the pandemic\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Col, ListGroup, Row, Container, Card } from \"react-bootstrap\";\n\nexport default function ResearcherProfile() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Welcome back, User </h1>\n          <Button>Share Your Research</Button>\n          <Button>Ask a Question </Button>\n        </Col>\n        <Col>\n          <h1>Your Highlights</h1>\n          <ListGroup>\n            <ListGroup.Item>Cras justo odio</ListGroup.Item>\n            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h1>LATEST QUESTIONS</h1>\n\n          <Card>\n            <Card.Header as=\"h5\">Featured</Card.Header>\n            <Card.Body>\n              <Card.Title>Special title treatment</Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional\n                content.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Header as=\"h5\">Featured</Card.Header>\n            <Card.Body>\n              <Card.Title>Special title treatment</Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional\n                content.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col>\n          <h1>LATEST RESEARCH</h1>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <Card.Title>Card Title</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Card Subtitle\n              </Card.Subtitle>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n              <Card.Link href=\"#\">Card Link</Card.Link>\n              <Card.Link href=\"#\">Another Link</Card.Link>\n            </Card.Body>\n          </Card>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <Card.Title>Card Title</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Card Subtitle\n              </Card.Subtitle>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n              <Card.Link href=\"#\">Card Link</Card.Link>\n              <Card.Link href=\"#\">Another Link</Card.Link>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { TextField, Fab } from \"@material-ui/core\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport classNames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submitMyStory } from \"actions/story\";\nimport paths from \"routes/paths\";\n\nexport default function MyStory(props) {\n  const [myStory, setMyStory] = useState(\"\");\n  const { story } = useSelector((state) => state.story);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    setMyStory(event.target.value);\n  };\n\n  const handleSubmitStory = () => {\n    if (!myStory || myStory.length === 0) {\n      document.getElementById(\"warning\").innerHTML =\n        \"Your story is empty. Please write a few words to sumbit.\";\n    } else {\n      document.getElementById(\"warning\").innerHTML = \"\";\n      var storyId = story.id;\n      dispatch(submitMyStory(storyId, myStory));\n      props.history.push(paths.storyHistory);\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">SHARE MY COVID-19 STORY</h1>\n      <div id=\"warning\" style={{ marginBottom: \"20px\", color: \"red\" }}></div>\n      <TextField\n        id=\"outlined-multiline-static\"\n        placeholder=\"We want to learn from your experience to help overcome the pandemic. We all have a COVID-19 story, share yours!\"\n        multiline\n        rowsMax={10}\n        value={myStory}\n        onChange={handleChange}\n        className={classNames(\"textarea\", styles.textarea)}\n        variant=\"outlined\"\n      />\n      <Fab\n        style={{\n          background: \"#EA2027\",\n          width: 200,\n          margin: \"1.5rem auto 0 auto\",\n        }}\n        aria-label=\"add\"\n        size=\"medium\"\n        className=\"fab\"\n        variant=\"extended\"\n        onClick={handleSubmitStory}\n      >\n        SHARE MY STORY\n      </Fab>\n      <Fab\n        style={{ background: \"#9206FF\" }}\n        aria-label=\"add\"\n        onClick={() => props.history.push(paths.storyHistory)}\n        size=\"medium\"\n        className=\"fab back-btn\"\n      >\n        <ArrowLeftIcon />\n      </Fab>\n      <Fab\n        style={{ background: \"#EA2027\" }}\n        aria-label=\"Go to next page\"\n        size=\"medium\"\n        className=\"fab next-btn\"\n        onClick={() => props.history.push(paths.dashboard)}\n      >\n        <MapIcon />\n      </Fab>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button, Col, ListGroup, Row, Container, Card } from \"react-bootstrap\";\n\nexport default function PublicProfile() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Row>\n            <h3>Your Feed </h3>\n            <Button>Share Your Research</Button>\n          </Row>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <Card.Title>Card Title</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Card Subtitle\n              </Card.Subtitle>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n              <Card.Link href=\"#\">Card Link</Card.Link>\n              <Card.Link href=\"#\">Another Link</Card.Link>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Header as=\"h5\">Featured</Card.Header>\n            <Card.Body>\n              <Card.Title>Special title treatment</Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional\n                content.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Row>\n            <h1>Stories near you</h1>\n            <Button>Ask a Question </Button>\n          </Row>\n          <ListGroup>\n            <ListGroup.Item>Cras justo odio</ListGroup.Item>\n            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2_iRq\",\"form\":\"styles_form__2OFFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__26OvV\",\"status\":\"styles_status__2iuUz\",\"error\":\"styles_error__2fITO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__HwbdP\",\"paper\":\"styles_paper__37PoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"styles_textarea__2EP0z\",\"Mui-focused\":\"styles_Mui-focused__2jhBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1mz1T\"};"],"sourceRoot":""}